// https://renecutura.eu v0.1.5 Copyright 2022 Rene Cutura
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).datasets=e.datasets||{})}(this,(function(e){"use strict";var t=["Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica"],a=["Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-setosa","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-versicolor","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica","Iris-virginica"],i=["sepallength","sepalwidth","petallength","petalwidth"],r=[[5.1,3.5,1.4,.2],[4.9,3,1.4,.2],[4.7,3.2,1.3,.2],[4.6,3.1,1.5,.2],[5,3.6,1.4,.2],[5.4,3.9,1.7,.4],[4.6,3.4,1.4,.3],[5,3.4,1.5,.2],[4.4,2.9,1.4,.2],[4.9,3.1,1.5,.1],[5.4,3.7,1.5,.2],[4.8,3.4,1.6,.2],[4.8,3,1.4,.1],[4.3,3,1.1,.1],[5.8,4,1.2,.2],[5.7,4.4,1.5,.4],[5.4,3.9,1.3,.4],[5.1,3.5,1.4,.3],[5.7,3.8,1.7,.3],[5.1,3.8,1.5,.3],[5.4,3.4,1.7,.2],[5.1,3.7,1.5,.4],[4.6,3.6,1,.2],[5.1,3.3,1.7,.5],[4.8,3.4,1.9,.2],[5,3,1.6,.2],[5,3.4,1.6,.4],[5.2,3.5,1.5,.2],[5.2,3.4,1.4,.2],[4.7,3.2,1.6,.2],[4.8,3.1,1.6,.2],[5.4,3.4,1.5,.4],[5.2,4.1,1.5,.1],[5.5,4.2,1.4,.2],[4.9,3.1,1.5,.1],[5,3.2,1.2,.2],[5.5,3.5,1.3,.2],[4.9,3.1,1.5,.1],[4.4,3,1.3,.2],[5.1,3.4,1.5,.2],[5,3.5,1.3,.3],[4.5,2.3,1.3,.3],[4.4,3.2,1.3,.2],[5,3.5,1.6,.6],[5.1,3.8,1.9,.4],[4.8,3,1.4,.3],[5.1,3.8,1.6,.2],[4.6,3.2,1.4,.2],[5.3,3.7,1.5,.2],[5,3.3,1.4,.2],[7,3.2,4.7,1.4],[6.4,3.2,4.5,1.5],[6.9,3.1,4.9,1.5],[5.5,2.3,4,1.3],[6.5,2.8,4.6,1.5],[5.7,2.8,4.5,1.3],[6.3,3.3,4.7,1.6],[4.9,2.4,3.3,1],[6.6,2.9,4.6,1.3],[5.2,2.7,3.9,1.4],[5,2,3.5,1],[5.9,3,4.2,1.5],[6,2.2,4,1],[6.1,2.9,4.7,1.4],[5.6,2.9,3.6,1.3],[6.7,3.1,4.4,1.4],[5.6,3,4.5,1.5],[5.8,2.7,4.1,1],[6.2,2.2,4.5,1.5],[5.6,2.5,3.9,1.1],[5.9,3.2,4.8,1.8],[6.1,2.8,4,1.3],[6.3,2.5,4.9,1.5],[6.1,2.8,4.7,1.2],[6.4,2.9,4.3,1.3],[6.6,3,4.4,1.4],[6.8,2.8,4.8,1.4],[6.7,3,5,1.7],[6,2.9,4.5,1.5],[5.7,2.6,3.5,1],[5.5,2.4,3.8,1.1],[5.5,2.4,3.7,1],[5.8,2.7,3.9,1.2],[6,2.7,5.1,1.6],[5.4,3,4.5,1.5],[6,3.4,4.5,1.6],[6.7,3.1,4.7,1.5],[6.3,2.3,4.4,1.3],[5.6,3,4.1,1.3],[5.5,2.5,4,1.3],[5.5,2.6,4.4,1.2],[6.1,3,4.6,1.4],[5.8,2.6,4,1.2],[5,2.3,3.3,1],[5.6,2.7,4.2,1.3],[5.7,3,4.2,1.2],[5.7,2.9,4.2,1.3],[6.2,2.9,4.3,1.3],[5.1,2.5,3,1.1],[5.7,2.8,4.1,1.3],[6.3,3.3,6,2.5],[5.8,2.7,5.1,1.9],[7.1,3,5.9,2.1],[6.3,2.9,5.6,1.8],[6.5,3,5.8,2.2],[7.6,3,6.6,2.1],[4.9,2.5,4.5,1.7],[7.3,2.9,6.3,1.8],[6.7,2.5,5.8,1.8],[7.2,3.6,6.1,2.5],[6.5,3.2,5.1,2],[6.4,2.7,5.3,1.9],[6.8,3,5.5,2.1],[5.7,2.5,5,2],[5.8,2.8,5.1,2.4],[6.4,3.2,5.3,2.3],[6.5,3,5.5,1.8],[7.7,3.8,6.7,2.2],[7.7,2.6,6.9,2.3],[6,2.2,5,1.5],[6.9,3.2,5.7,2.3],[5.6,2.8,4.9,2],[7.7,2.8,6.7,2],[6.3,2.7,4.9,1.8],[6.7,3.3,5.7,2.1],[7.2,3.2,6,1.8],[6.2,2.8,4.8,1.8],[6.1,3,4.9,1.8],[6.4,2.8,5.6,2.1],[7.2,3,5.8,1.6],[7.4,2.8,6.1,1.9],[7.9,3.8,6.4,2],[6.4,2.8,5.6,2.2],[6.3,2.8,5.1,1.5],[6.1,2.6,5.6,1.4],[7.7,3,6.1,2.3],[6.3,3.4,5.6,2.4],[6.4,3.1,5.5,1.8],[6,3,4.8,1.8],[6.9,3.1,5.4,2.1],[6.7,3.1,5.6,2.4],[6.9,3.1,5.1,2.3],[5.8,2.7,5.1,1.9],[6.8,3.2,5.9,2.3],[6.7,3.3,5.7,2.5],[6.7,3,5.2,2.3],[6.3,2.5,5,1.9],[6.5,3,5.2,2],[6.2,3.4,5.4,2.3],[5.9,3,5.1,1.8]],s={sepallength:{count:150,mean:5.8433333333,std:.828066128,min:4.3,"25%":5.1,"50%":5.8,"75%":6.4,max:7.9},sepalwidth:{count:150,mean:3.054,std:.4335943114,min:2,"25%":2.8,"50%":3,"75%":3.3,max:4.4},petallength:{count:150,mean:3.7586666667,std:1.76442042,min:1,"25%":1.6,"50%":4.35,"75%":5.1,max:6.9},petalwidth:{count:150,mean:1.1986666667,std:.7631607417,min:.1,"25%":.3,"50%":1.3,"75%":1.8,max:2.5}},n={names:t,labels:a,columns:i,values:r,statistics:s},o=Object.freeze({__proto__:null,names:t,labels:a,columns:i,values:r,statistics:s,default:n}),l=["South_Africa","Israel","Japan","Korea","Russia","Australia","New_Zealand","Austria","Belgium","Czech_Republic","Denmark","Estonia","Finland","France","Germany","Greece","Hungary","Iceland","Ireland","Italy","Latvia","Luxembourg","Netherlands","Norway","Poland","Portugal","Slovak_Republic","Slovenia","Spain","Sweden","Switzerland","Turkey","United_Kingdom","Canada","Mexico","United_States","Chile","Brazil"],h=["Africa","Asia","Asia","Asia","Asia","Australia","Australia","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","Europe","North_America","North_America","North_America","South_America","South_America"],m=["Dwellings_without_basic_facilities","Housing_expenditure","Rooms_per_person","Household_net_adjusted_disposable_income","Household_net_financial_wealth","Labour_market_insecurity","Employment_rate","Long-term_unemployment_rate","Personal_earnings","Quality_of_support_network","Educational_attainment","Student_skills","Years_in_education","Air_pollution","Water_quality","Stakeholder_engagement_for_developing_regulations","Voter_turnout","Life_expectancy","Self-reported_health","Life_satisfaction","Feeling_safe_walking_alone_at_night","Homicide_rate","Employees_working_very_long_hours","Time_devoted_to_leisure_and_personal_care"],d=[[20.5,18,.7,8712,16937,22.6,43,14.37,5429,90,65,384,15.4,14,69,1.6,73,56.8,67,4.9,39.8,9.6,18.07,14.73],[4.4,21,1.2,22116,50051,3.9,68,.63,29635,86,85,474,15.9,26,65,.9,72,82.1,80,7.1,66.3,1.8,14.74,13.94],[6.4,22,1.9,27323,92818,2.4,73,1.36,35672,91,94,540,16,16,87,1.3,53,83.4,35,5.9,70.2,.3,21.89,14.85],[4.2,16,1.4,19372,30852,2.1,65,.01,36653,76,85,542,17.5,29,78,2.4,76,81.8,35,5.8,67.7,1.1,23.12,14.7],[14.4,11,.9,17006,3687,5.1,69,1.45,26977,91,95,481,16.1,14,49,.8,65,70.7,39,6,52.9,11.3,.18,14.91],[1.1,20,2.3,33138,48836,3.9,72,1.32,51148,95,77,512,19.2,6,94,2.7,93,82.2,85,7.3,62.6,.8,13.39,14.35],[.3,23,2.4,23213,81271,4.9,74,.78,45183,99,74,509,18,9,92,2.5,77,81.4,90,7.4,64.4,1.2,13.78,14.87],[1,21,1.6,31667,55623,2.2,71,1.53,45988,93,84,500,17.1,15,93,1.3,75,81.2,69,7.1,81.2,.4,7.32,14.55],[2.1,21,2.2,28700,89057,3.6,62,4.26,48093,88,74,509,18.8,19,83,2.2,89,80.7,74,6.9,69.6,1.1,4.73,15.77],[.7,26,1.4,18953,20170,4.7,69,2.72,21185,90,93,500,17.4,17,88,2.6,59,78.3,60,6.6,70.1,.9,5.99,15.03],[.5,25,1.9,26945,54839,2.3,73,1.66,49589,96,80,498,19.6,11,95,2.1,86,80.4,72,7.5,85.2,.3,2.21,15.87],[7.2,19,1.6,16565,15728,7.6,70,3.32,21020,90,91,526,17.8,9,84,2.8,64,77.3,53,5.6,67.2,4.8,3.29,14.9],[.6,22,1.9,28238,24482,2.6,69,1.97,40742,94,87,529,19.7,7,94,2.3,69,81.1,65,7.4,85.8,1.5,3.6,15.17],[.5,21,1.8,29759,53851,4.6,64,4.21,40828,89,75,500,16.4,14,84,2.1,80,82.3,67,6.4,70.6,.6,7.77,16.36],[0,22,1.8,31925,49822,2.7,74,2.21,43872,92,87,515,18.1,15,94,2.1,72,80.9,65,7,74.6,.5,4.96,15.55],[.5,26,1.2,18099,17568,32,49,19.47,26436,83,68,466,18.5,15,69,1.9,64,81.4,74,5.6,62.5,1.5,6.37,14.74],[5.3,20,1.1,15614,17774,7.8,62,3.78,21399,82,83,487,17.2,16,76,1.2,62,75.7,57,5.3,53.2,1.2,3.76,15.04],[0,24,1.6,27918,54275,.7,82,.67,56789,96,73,484,19.6,7,97,1.6,81,82.1,77,7.5,78.1,.3,13.79,14.13],[.1,20,2,22969,31861,5,61,6.98,53286,95,79,516,17.8,8,82,.8,70,81.1,82,6.8,77,.8,4.11,15.3],[.8,24,1.4,25004,56833,11.8,57,7.79,34744,91,59,490,16.8,18,70,1.5,75,82.8,66,5.8,59.3,.8,3.83,14.89],[14.7,26,1.2,13655,9837,8,66,4.67,22270,84,90,494,17.8,12,76,2.4,59,74.1,50,5.9,61.6,6.1,2.45,13.83],[.1,21,2,40914,64500,2.1,67,1.6,61511,93,82,490,15.1,15,85,1.5,91,81.9,72,6.7,70.6,.2,3.27,15.17],[0,19,1.9,27759,71251,3.1,73,2.98,51003,88,76,519,17.9,17,94,1.3,75,81.4,76,7.3,80.5,.8,.44,15.9],[0,18,2,33393,16930,1.5,75,.41,51718,93,82,496,18,6,97,1.9,78,81.8,76,7.6,89.6,1,3.05,15.56],[3.1,22,1.1,17820,12902,8.9,62,3.26,23649,86,91,521,17.9,17,80,2.6,55,77.1,58,6,66.1,1,7.25,14.42],[1,19,1.7,19882,29563,11.7,63,8.28,23977,85,43,488,17.4,10,89,1.2,56,80.8,46,5.1,69.2,.9,9.77,14.72],[1.3,25,1.1,18534,8896,10.7,61,8.8,22151,92,91,472,16.2,16,81,2.9,59,76.5,66,6.2,62.1,1.2,6.23,14.92],[.6,19,1.5,19130,17271,5.2,64,5.27,33068,89,86,499,18.3,14,91,2.8,52,80.4,65,5.7,83.9,.4,5.5,14.75],[.1,23,1.9,22007,29819,26.6,57,12.92,36013,96,57,490,17.7,12,71,1.6,73,83.2,72,6.4,81.6,.6,5.61,15.93],[0,20,1.8,28859,69899,5.2,75,1.33,40994,92,82,482,19.1,7,95,2,86,82,81,7.3,76.8,.8,1.1,15.18],[0,22,1.8,35952,120265,1.7,80,1.71,57082,93,88,518,17.4,17,97,2.6,48,82.9,81,7.6,87.4,.5,6.34,15.01],[7.6,21,1.1,13471,3886,9.1,50,2.04,15992,84,36,462,16.9,17,63,2.1,85,76.6,68,5.5,60.4,1.7,39.26,12.24],[.4,23,1.9,26687,69927,5.7,73,2.22,41659,93,79,502,16.7,11,87,2.9,66,81.1,74,6.5,77.8,.2,12.83,14.87],[.2,21,2.5,30474,75775,3.9,72,.89,48164,94,90,522,16.3,12,90,3,68,81.5,89,7.4,81.7,1.5,3.83,14.41],[4.2,22,1,12806,9856,5.2,60,.06,12850,75,34,417,14.4,12,68,3.5,63,74.6,66,6.2,39.9,23.4,28.28,12.8],[.1,19,2.4,41071,163268,5.2,68,1.42,57139,90,90,492,17.1,11,84,3.2,67,78.8,88,6.9,73.9,5.2,11.69,14.47],[9.4,18,1.2,15094,18172,8.1,62,1.67,21370,82,61,436,17.1,18,71,1.5,49,78.8,59,6.5,50.2,3.8,13.84,14.91],[6.7,21,.9,11487,7566,6.6,67,.81,10229,90,46,402,15.6,17,73,1.3,79,75,70,6.5,39.5,26.7,9.45,14.27]],c={Dwellings_without_basic_facilities:{count:38,mean:3.1605263158,std:4.8000866813,min:0,"25%":.125,"50%":.75,"75%":4.35,max:20.5},Housing_expenditure:{count:38,mean:21.0789473684,std:2.9351695835,min:11,"25%":19.25,"50%":21,"75%":22.75,max:26},Rooms_per_person:{count:38,mean:1.6131578947,std:.466250746,min:.7,"25%":1.2,"50%":1.65,"75%":1.9,max:2.5},Household_net_adjusted_disposable_income:{count:38,mean:23742.9210526316,std:8044.3115485973,min:8712,"25%":17889.75,"50%":23091,"75%":28819.25,max:41071},Household_net_financial_wealth:{count:38,mean:43839.9473684211,std:35212.4867778212,min:3687,"25%":17020.5,"50%":31356.5,"75%":62583.25,max:163268},Labour_market_insecurity:{count:38,mean:6.8684210526,std:6.7093764669,min:.7,"25%":2.8,"50%":5.05,"75%":7.95,max:32},Employment_rate:{count:38,mean:66.3684210526,std:8.198289382,min:43,"25%":62,"50%":67.5,"75%":72.75,max:82},"Long-term_unemployment_rate":{count:38,mean:3.7060526316,std:4.2472022839,min:.01,"25%":1.3375,"50%":2.005,"75%":4.2475,max:19.47},Personal_earnings:{count:38,mean:35934.3947368421,std:14804.883862811,min:5429,"25%":22614.75,"50%":36333,"75%":48146.25,max:61511},Quality_of_support_network:{count:38,mean:89.6315789474,std:5.359614007,min:75,"25%":86.5,"50%":90.5,"75%":93,max:99},Educational_attainment:{count:38,mean:76.6315789474,std:16.0714974371,min:34,"25%":73.25,"50%":82,"75%":87.75,max:95},Student_skills:{count:38,mean:491.1578947368,std:34.5202849224,min:384,"25%":482.5,"50%":497,"75%":514.25,max:542},Years_in_education:{count:38,mean:17.3631578947,std:1.2713944361,min:14.4,"25%":16.475,"50%":17.4,"75%":18,max:19.7},Air_pollution:{count:38,mean:13.8421052632,std:4.9730425501,min:6,"25%":11,"50%":14,"75%":17,max:29},Water_quality:{count:38,mean:82.5,std:11.5495407654,min:49,"25%":73.75,"50%":84,"75%":92.75,max:97},Stakeholder_engagement_for_developing_regulations:{count:38,mean:2.0263157895,std:.7062210857,min:.8,"25%":1.5,"50%":2.1,"75%":2.6,max:3.5},Voter_turnout:{count:38,mean:70.1052631579,std:11.8339627451,min:48,"25%":62.25,"50%":71,"75%":77.75,max:93},Life_expectancy:{count:38,mean:79.2684210526,std:4.7751669145,min:56.8,"25%":77.55,"50%":81.1,"75%":81.875,max:83.4},"Self-reported_health":{count:38,mean:67.6052631579,std:13.8672070371,min:35,"25%":61.25,"50%":68.5,"75%":76,max:90},Life_satisfaction:{count:38,mean:6.5052631579,std:.7679201002,min:4.9,"25%":5.9,"50%":6.5,"75%":7.25,max:7.6},Feeling_safe_walking_alone_at_night:{count:38,mean:68.7131578947,std:13.0525584331,min:39.5,"25%":62.2,"50%":69.85,"75%":78.025,max:89.6},Homicide_rate:{count:38,mean:3.0736842105,std:5.8155283374,min:.2,"25%":.6,"50%":1,"75%":1.65,max:26.7},Employees_working_very_long_hours:{count:38,mean:9.1339473684,std:8.2402494516,min:.18,"25%":3.7775,"50%":6.285,"75%":13.25,max:39.26},Time_devoted_to_leisure_and_personal_care:{count:38,mean:14.8160526316,std:.7831003507,min:12.24,"25%":14.49,"50%":14.88,"75%":15.17,max:16.36}},u={names:l,labels:h,columns:m,values:d,statistics:c},_=Object.freeze({__proto__:null,names:l,labels:h,columns:m,values:d,statistics:c,default:u}),f=["Key to the Gate","Trumpets Of Doom","Tunnel of Set XIII","Hail Murder - Live In South America 2003","Moti Ragnarokum","Hail Murder","Key To The Gate","Tunnel of Set XIII","Krigaren si gravferd","PERVERTOR OF THE 7 GATES","Love In A Void","Osiris","A World Of Bones","Pervertor Of The 7 Gates","Tunnel of Set XIII","Bellum Omnium Contra Omnes","Ghastly Indoctrination","Fear of Napalm","Go To Hell","Pull the Plug - Live in L.A. Death & Raw – 1998","Tomorrow's Victim","Stillborn Saviour","Divine in fire","Lunatic Of God's Creation - Reissue","Thrasher's Abbatoir","Silent Violence","Sacred Serenity","Evidence In The Furnace","Misanthrope","Oxidised Razor Masticator","Misanthrope","Pull the Plug - Live at Backstreets","Go to Hell","No Sympathy For Fools","Year One Now","Misanthrope - Demo","Together as One","Silent Violence","Shreds Of Flesh","Pull the Plug","Nothing Is Everything","The Ancient Ones","Addicted to Vaginal Skin","Deathrow (no regrets)","Livestock Marketplace","Amok","Bible Basher","Pull the Plug - 12/05/87 Rehearsals","Shreds Of Flesh","So You Die","Let the Stillborn Come to Me","Silent Violence","Deathrow (no Regrets)","Thrasher's Abbatoir","Painkiller","Nothing Is Everything","Out Of Touch","By The Light","Crucified For The Innocence","Together As One","War is Coming","Silent Violence","Shreds Of Flesh","Room 101","Together as One","Deathrow (no regrets)","Addicted to Vaginal Skin (Live)","Oxidised Razor Masticator","Livestock Marketplace - Bonus Track","Spiritual Healing","Behold The Throne Of Chaos","On Most Surfaces","Faster","Draconian trilogy (Live in Miskolc)","When the Sun Hits","Secret of the runes","Lorelei","Enter","When the Sun Hits","Estranged - A Timeless Spell","Face Your Demons - Session Version","Murder","Anagram","Face Your Demons - Alternative Version","Short Glance","Inimical Chimera - Remaster","Nobody Dares","Memories","Forgiven","Frail","Who I Am","Pale Tortured Blue","Restless","When the Sun Hits","Candles","Liberty Bell","Lava","Survivalism - deadmau5 Remix","You Know Who You Are","Capital G","The Frail","Far Too Frail","Another Version of the Truth - kronos and enrique gonzalez muller","Starved for Truth - Part 1","In The Army Now","Capital G - Paul Epworth Phones 666 Revolutions Mix","Sharp Dressed Man","The Frail - Remix Version",'Dead Eyes Opened 12"',"Dead Eyes Opened (USA 2015)","Bullet","Copy of a","Mount","My Thorny Thorny Crown","Sin","So What","End Of Days Part 2 (Extreme Mayan Makeover Mix)","Sharp Dressed Man","My Thorny Thorny Crown","She's Got A Cause","Dead Eyes Opened","Bitch","Pantomime","On the Surface of Scardonia","Crucified","Sweet Dreams (Are Made Of This)","A Hole In The Wall","Tough Guy","Living Dead Girl - Subliminal Seduction Mix","Living Dead Girl","Living Dead Girl - Photek Remix","Spine For You","Spookshow Baby","Falls Apart","Dreamtime","Birds Of Hell Awaiting","Stillborn","Come On - Go Off - Rotersand Remix","Rowboat","Come On - Go Off","Living Dead Girl","Falls Apart","Coward","Reload","Birds Of Hell Awaiting","The Vaults of Re:Memory","WO BIST DU","Birds Of Hell Awaiting","Thirteen","Over My Head","I Hate Today","WO BIST DU","Fadeaway","Survive","Dragula","OHNE DICH","Sucks (Live)","Rowboat","Everything Is Boring","Living Dead Girl - Live","Blue Monday","Candy-O","OHNE DICH - RMX BY LAIBACH","Spookshow Baby - Black Leather Catsuit Mix","Keep It Clean","Ego Tripp","Vapor Transmission - Intro Album Version","Lunchbox","What?","Living Dead Girl","Dogma","Dogma","Fadeaway","Mesopotamia","Fadeaway - Instrumental","Spookshow Baby - Black Leather Catsuit Mix","Living Dead Girl","Light In The Shadows","Birds Of Hell Awaiting","Make Up Your Mind","Fadeaway - Live","Keine Lust","Solaris","Midnight Train","Tough Guy - Tim Ismag Remix","House Of 1000 Corpses/Unholy 3","Rainmaker","Tears of the Dragon - Live At The Marquee","The Nomad","Melt The Ice Away","Living After Midnight","Painkiller","Fear of the Dark","The Rage","Anthem To The Estranged","Never Walk Alone..A Call To Arms","Lightning Strikes Twice","The Haunting","When the Wild Wind Blows","Come And Get It","Louie Louie - Alternative Version","Do or Die","Enter Sandman","Get Back In Line - Live in Wacken","Get Back In Line","Greenhouse Effect","The Fallen Angel","Purgatory","Come and Get It","Electric Eye - Live from Battle Cry","Parasite","Tears of the Dragon (Acoustic Chillout) [Bonus Track]","Through The Never (Live in Mexico City)","Escape","Get Back In Line - Live","Electric Eye - Live from the San Antonio Civic Center","Johnny B. Goode","Rainmaker","Tears of the Dragon","Trapped Under Ice","Battery (Live in Mexico City)","The Four Horsemen (Live in Mexico City)","Tears Of A Clown","The Threat Is Real","Electric Eye - Live","Electric Eye","Electric Eye","The Unforgiven (Live in Mexico City)","Up to the Limit","Blood Money","Battery","Agony","So What","Bare Bones","Carry On","Nightmare/The Dreamtime","Call To Arms","Another Life","The Thin Line Between Love And Hate","Louie Louie","Burnin' Up","Tears of the Dragon - Live In Brazil","Souls Of Black (Alcatraz Revisit)","Enter Sandman (Live)","No More Lies - Live","Painkiller - Live from Battle Cry","Electric Eye","No More Lies","Enter Sandman (Live with the SFSO)","Rainmaker - Live","Tears of the Dragon","Red Star Falling","The Threat Is Real","Rainmaker","Together as One","One","Capricorn","Up To The Limit","Wish You Were Dead","Get Back In Line - Live Manchester","All Nightmare Long","Battery (Live)","Tears of the Dragon","Wish You Were Dead","Battery (Live with the SFSO)","Rock 'N' Roll","Red Star Falling - orchestral version","All Men Play On Ten","Afraid to Shoot Strangers","Electric Funeral","For Whom The Bell Tolls (Live in Mexico City)","No More Lies","Go to Hell","Go To Hell","Tears Of The Dragon","Jack The Ripper","No More Lies","Let Me Out","One Of A Kind","The Riddle","The Haunting","Written in stone","Full Moon","Draconian Love","Ain't Your Fairytale","Ghost Division","Neverland","The champion","The dragon lies bleeding","Back To Back","Hero of Zeroes","Dreamland","We're Gonna Make It","Not Like You","Zeroes","In the Army Now (Bonus Track)","Back to back","The bitch is back","Carry the Torch","Carry the Torch (Track Commentary)","The Golden Spiral","Vosstanie Roda","Suden joiku","The Golden Spiral","A Burning Arrow","Carry the Torch","Vosstanie Roda","Neverland"],g=["black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","black metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","death metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","gothic metal","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","industrial metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","power metal","folk metal","folk metal","folk metal","folk metal","folk metal","folk metal","folk metal","folk metal","folk metal","folk metal"],p=["danceability","popularity","energy","acousticness","instrumentalness","liveness","valence"],w=[[.0966,.19,.88,38799999999999994e-21,662,105,256],[.24,.14,996,134e-7,.00266,179,147],[285,.04,.0945,835,927,.0898,.0432],[152,.13,983,20600000000000003e-21,.0053100000000000005,953,.0482],[481,.18,281,937,.91,226,259],[208,.26,934,124e-8,.0017399999999999998,928,.0347],[153,.27,778,.00893,903,403,112],[327,.06,102,863,863,456,.0397],[351,.11,839,625e-6,.0813,203,.0372],[277,.03,993,.0030399999999999997,428,179,141],[103,.03,997,.00728,.0185,385,.0487],[.46,.19,975,343e-8,639,309,242],[242,.04,718,136e-7,923,134,416],[276,.04,994,.0033399999999999997,417,406,149],[303,0,116,815,955,377,.0601],[284,.05,633,109e-8,.0195,.0949,.0349],[332,.12,813,22e-6,812,203,.04],[224,.17,946,7699999999999999e-21,861,216,374],[.22,.23,971,732e-8,198,.0852,346],[175,.16,957,149e-6,.0234,722,285],[377,.18,717,.00021899999999999998,831,121,302],[187,.23,912,442e-8,345e-7,558,176],[322,.04,995,164e-6,.0018800000000000002,323,104],[298,.29,996,218e-7,218,.0947,.0649],[148,.26,998,31e-7,184,184,.0602],[378,.06,.92,261e-7,845,.0849,495],[444,.03,.99,14800000000000002e-21,374,.0392,326],[521,.24,991,207e-6,597,.0707,.17],[397,.29,987,.00023199999999999997,.00282,145,213],[.21,.05,.87,.00162,667,342,.0396],[397,.28,987,.00023199999999999997,.00282,145,213],[164,.14,957,609,212,855,.0442],[319,.18,969,519e-7,506,.0874,.0379],[431,.18,903,261e-7,.0362,273,389],[.13,.16,943,17e-7,174e-6,299,.18],[286,.18,824,.00109,572,.16,544],[311,.21,945,123e-7,286,.0915,386],[429,.23,941,32e-5,728,.0882,342],[173,.12,.98,668e-8,404,175,104],[226,.41,978,36000000000000003e-22,533,.0436,252],[379,.25,974,651e-8,233,.0203,225],[303,.21,882,327e-6,.0037799999999999995,134,535],[244,.34,987,5660000000000001e-20,779,.0664,256],[167,.07,454,.0053100000000000005,.0347,108,215],[447,.09,941,6159999999999999e-20,155,.0935,577],[437,.1,886,39899999999999994e-21,.0248,122,268],[335,.22,944,.00243,419,103,436],[154,.16,938,.0994,.52,355,167],[181,.04,974,634e-8,308,255,128],[318,.33,947,135e-8,909,.0694,311],[224,.21,963,19e-7,164,368,201],[321,.15,955,416e-7,898,973,196],[.27,.07,485,.0031899999999999997,.0574,199,261],[148,.19,998,31e-7,184,184,.0602],[428,.38,995,20600000000000003e-21,429,305,135],[412,.22,943,923e-7,.0956,166,159],[261,.23,961,32200000000000003e-21,.0543,155,364],[256,.19,709,136e-6,.2,183,476],[258,.19,993,.00022400000000000002,631,125,122],[268,.28,962,169e-6,325,.0599,193],[.34,.23,936,3,.0455,445,381],[368,.14,883,453e-6,.87,351,107],[179,.02,972,715e-8,.38,.2,144],[338,.24,855,716e-8,184,118,386],[311,.24,945,123e-7,286,.0915,386],[239,.09,508,.00375,.0334,258,227],[195,.14,955,437,769,903,234],[209,.1,.87,.0216,878,482,.0929],[447,.18,941,6159999999999999e-20,155,.0935,577],[343,.32,942,26300000000000002e-21,.0136,.0701,366],[211,.09,988,384e-7,.0481,318,.0393],[336,.24,688,.0014199999999999998,472e-6,158,245],[503,.44,923,.00119,.00047400000000000003,117,519],[402,.18,686,.008440000000000001,453,.92,144],[252,.17,729,.0017,.0458,.0515,.17],[496,.19,952,417e-8,611,281,173],[524,.31,717,.005379999999999999,209,.0922,381],[457,.22,718,21899999999999997e-21,.0214,385,162],[234,.11,728,.0791,.0006219999999999999,.0557,161],[363,.29,915,.0052899999999999996,.0563,.3,339],[402,.13,817,.0012699999999999999,0,.11,.57],[514,.28,958,.007809999999999999,892e-8,.0827,341],[495,.05,873,115e-7,.00439,492,573],[451,.17,923,524e-6,.00728,.0968,539],[526,.06,728,133e-6,841,178,172],[434,.18,865,132e-6,.0873,279,214],[426,.05,136,918,73e-5,.0992,106],[425,.39,677,165,435e-8,158,197],[524,.27,342,938,.0010199999999999999,132,165],[504,.21,542,254,.00829,244,138],[451,.3,898,27600000000000003e-21,.00507,268,179],[334,.32,531,.00183,.00294,.31,102],[531,.24,.66,417e-6,932e-6,267,.0406],[252,.06,718,.0019100000000000002,.0561,.0721,147],[459,.19,643,.0026,569,159,.0563],[373,.22,912,.00011899999999999999,.00359,395,61],[441,.26,828,132e-6,763,.0875,338],[771,.4,457,539,.00031099999999999997,104,576],[738,.17,.87,.0544,905,119,389],[352,.39,895,.03,181e-8,105,638],[177,.37,.0040100000000000005,953,868,244,159],[631,.17,732,.00292,72e-5,168,773],[289,.23,.73,644,732,373,284],[448,.04,903,325,0,398,225],[588,.04,676,.0294,118e-6,846,515],[.8,.25,764,.0009480000000000001,739e-6,.0596,.58],[304,.16,927,123e-7,278,294,155],[163,.23,374,591,409,486,319],[668,.07,866,.0015300000000000001,915,403,861],[785,.11,711,155,905,.0669,964],[734,.12,889,178e-6,803,328,355],[635,.44,832,.0238,384,223,693],[.5,.14,982,.009859999999999999,.9,196,.61],[351,.03,345,625,.19,431,251],[.63,.38,865,.0009660000000000001,607,817,742],[682,.34,607,24e-6,384,178,509],[407,.06,966,124e-7,.86,356,.15],[303,.12,948,118e-7,.32,341,134],[356,.02,338,658,.0846,391,241],[685,.19,494,117,.00366,.0915,959],[664,.26,961,984e-6,934,191,856],[652,.34,983,729e-6,.00108,347,428],[469,.27,812,8690000000000001e-20,199e-7,337,422],[.0642,.2,304,303,927,76,.0321],[706,.17,967,737e-6,422e-8,313,716],[199,.65,622,.00745,794,204,142],[503,.18,936,516e-8,593,.15,.24],[414,.28,933,338e-6,.00619,.26,433],[595,.29,868,319e-6,292,739,373],[524,.4,944,.00513,.0269,236,532],[661,.32,.78,.00744,782,126,804],[513,.25,965,301e-7,281,525,345],[562,.36,995,.0135,.0268,.0728,197],[537,.2,774,.00015800000000000002,164,544,474],[613,.24,662,.0022,817,85,.0547],[623,.16,.84,31e-5,.00225,208,484],[.52,.23,931,41200000000000005e-21,736,.0857,395],[531,.09,928,797e-6,621,138,212],[496,.08,696,.00279,313,312,185],[484,.16,767,.00158,765,111,.0472],[512,.47,952,.00385,.07,211,.51],[421,.24,965,693e-8,.0251,219,637],[526,.29,893,408e-6,614e-8,.0603,.61],[465,.43,829,154e-6,.00445,324,255],[393,.15,833,.00032900000000000003,.00318,214,523],[171,.28,433,.0539,868,104,.0335],[449,.39,814,.00897,399,112,199],[605,.38,842,314e-6,.00158,257,.46],[333,.27,666,504,971,394,439],[466,.22,987,.0008449999999999999,262e-8,719,255],[208,.16,489,.00941,951,.0649,114],[.46,.35,772,.00705,254,116,196],[437,.3,816,256e-7,7979999999999999e-20,109,326],[482,.31,992,348e-7,.0605,123,434],[565,.63,949,46399999999999996e-21,107e-7,.0822,.63],[252,.44,596,.00462,283e-6,112,.19],[.49,.14,866,.00161,643,424,535],[496,.31,696,.00279,313,312,185],[589,.31,886,3,.007809999999999999,434,462],[514,.32,982,.0043100000000000005,501e-7,968,227],[589,.52,696,865e-7,343e-7,.0779,933],[477,.23,.97,121e-6,.0107,308,675],[486,.33,841,.00473,825e-6,.0708,157],[562,.25,838,547e-6,88,416,359],[629,.07,971,.00283,.0164,.0961,432],[389,.23,927,.0207,.00307,943,217],[418,.22,386,.0323,192,347,.0378],[434,.41,962,.00558,301,223,286],[551,.39,976,.00257,.00019099999999999998,328,842],[518,.36,.95,.00419,.0414,221,523],[474,.33,895,.00041799999999999997,.0508,442,271],[639,.27,882,346e-6,541,.0803,353],[441,.22,821,249e-7,735e-7,.11,321],[526,.23,985,618e-6,389,294,441],[444,.15,706,312e-7,793,109,432],[564,0,837,.00047599999999999997,212,354,413],[485,.58,907,.00302,.00617,326,.46],[592,.24,983,.00114,0,258,.28],[.4,.35,853,363e-6,.00198,241,403],[478,.2,948,.0185,0,165,556],[403,.16,941,.0037799999999999995,287,876,.0909],[545,.49,906,194e-6,.0162,303,233],[461,.22,913,696e-6,771,.0911,417],[728,.17,965,.00822,908,164,911],[529,.25,946,.00108,.0613,102,.48],[346,.39,815,.008490000000000001,878,117,154],[349,.35,955,.00247,0,.29,536],[177,.05,764,42e-5,.00011499999999999999,851,253],[336,.34,924,.0747,.0022600000000000003,137,.4],[465,.43,973,151e-6,685e-6,241,674],[.61,.6,824,.0136,175e-8,.0606,822],[435,.59,987,195e-6,.0847,268,.0993],[301,.56,813,674e-6,.0006309999999999999,197,234],[344,.37,751,.00441,.0285,133,567],[298,.23,693,.0010400000000000001,134,131,251],[362,.35,976,303e-6,368e-7,.0496,545],[224,.21,964,106,.00010400000000000001,314,358],[.34,.27,621,733e-8,.0794,.11,317],[304,.33,742,.00392,306,231,249],[214,.18,992,627e-7,524,.0769,209],[693,.2,807,.0194,267e-8,137,.95],[208,.25,808,538e-8,.00765,.21,291],[579,.77,824,.00206,.00903,59,.64],[199,.26,988,79,74,323,197],[.35,.22,991,.0213,718e-6,126,456],[387,.24,988,.00299,589e-6,.0541,271],[.27,.36,983,.0017699999999999999,388e-8,333,321],[.13,.33,957,843e-6,.0966,.52,523],[.41,.3,.98,.008440000000000001,.0439,476,.0956],[326,.38,979,448e-8,414,676,188],[.51,.27,966,.00116,.0009289999999999999,183,367],[507,.1,479,.0388,0,118,114],[379,.4,991,639e-7,.0011300000000000001,.8,.0562],[265,.52,937,.00227,526,161,531],[287,.26,996,.0438,11400000000000001e-21,496,152],[.0777,.27,953,.0009570000000000001,.0488,718,132],[333,.4,944,181,664e-6,349,398],[321,.19,.95,.00223,0,253,523],[493,.11,698,.0141,0,119,277],[254,.54,985,52600000000000005e-21,363,.0558,.0485],[274,.4,964,201e-7,.0337,979,115],[373,.4,.92,26300000000000002e-21,.0188,989,126],[311,.41,874,.006959999999999999,117e-7,.0861,492],[403,.36,988,48200000000000006e-21,.0141,266,106],[371,.29,934,997e-6,.00031299999999999996,951,115],[431,.4,947,779e-6,.00025299999999999997,356,363],[437,.53,948,.0007160000000000001,261e-6,146,371],[292,.43,.94,.00263,.0018100000000000002,984,215],[357,.24,651,138e-6,.006670000000000001,375,685],[234,.24,931,134e-7,919,134,417],[487,.64,944,135e-6,601,.0905,376],[251,.23,956,.00927,27000000000000002e-21,138,352],[533,.5,983,.00118,313e-7,378,393],[311,.22,765,785e-7,.78,148,459],[497,.5,904,389e-6,.00122,.0939,425],[356,.21,781,.0867,.009009999999999999,309,374],[449,.3,647,.0119,41700000000000004e-21,.0907,124],[201,.32,939,.0011300000000000001,603,173,678],[239,.34,.96,.00215,185,855,269],[668,.29,767,.008579999999999999,.00021899999999999998,378,829],[451,.23,932,.0255,105e-6,.0983,168],[229,.05,786,4,133e-6,954,171],[439,.05,.88,503e-6,221,537,611],[323,.52,914,.00265,381e-6,953,183],[212,.19,889,.0020800000000000003,.00224,978,119],[322,.38,972,559e-8,675,954,.0375],[.22,.29,952,.0007059999999999999,.00020299999999999997,.37,.35],[211,.34,845,12,.00507,148,.16],[278,.49,.97,144e-6,.0481,966,142],[292,.2,987,513e-6,553e-8,984,.24],[235,.08,782,731e-6,.0015199999999999999,134,273],[418,.17,843,.0912,801e-8,.0943,.33],[221,.5,988,49e-6,.0104,.27,.0894],[321,.27,.95,.00223,0,253,523],[273,.2,979,258e-8,736,354,277],[444,.7,703,.00112,.0761,127,425],[291,.26,873,.0736,.00205,176,456],[349,.14,976,.00021600000000000002,347e-7,949,246],[235,.11,998,312e-7,.0107,.18,484],[295,.23,991,.0634,712,306,295],[271,.59,985,.0005679999999999999,.00112,.0809,351],[341,.5,982,157e-6,.00246,412,81],[496,.32,.62,.00386,147e-8,114,275],[232,.15,998,3289999999999999e-20,.0123,142,508],[239,.47,976,109e-6,362,954,123],[399,.3,988,.00435,137e-8,592,211],[403,.17,847,.0722,198e-7,108,323],[.39,.31,947,.00515,25300000000000002e-21,538,171],[271,.39,.74,.00395,.0289,.0828,346],[448,.17,.94,699e-7,173,102,339],[265,.43,959,47600000000000005e-21,.14,977,.0898],[212,.18,.84,.0141,.0059700000000000005,147,174],[217,.18,913,354e-6,.0342,.0636,.59],[349,.34,864,433e-6,891,173,499],[237,.17,764,824e-6,.00434,183,276],[446,.28,931,.006640000000000001,194,199,517],[212,.25,.84,.0141,.0059700000000000005,147,174],[403,.23,978,135e-6,353e-7,314,119],[249,.2,923,.00322,557e-6,116,116],[257,.3,915,549e-6,0,153,.51],[496,.38,572,.0126,0,.1,252],[396,.12,948,.00266,984e-7,358,344],[284,.33,942,.0126,.00433,351,183],[578,.39,815,.0314,.00011399999999999999,114,518],[371,.3,879,388e-8,862e-8,322,491],[339,.51,945,878e-7,151e-7,.2,476],[579,.43,914,984e-7,901e-6,153,512],[475,.18,934,768e-6,369e-7,123,381],[.4,.31,987,312e-7,617,146,486],[535,.17,985,369e-7,.0628,67,159],[232,.17,946,295e-7,.0318,322,432],[.51,.34,993,22e-6,.0224,.22,372],[401,.16,849,.00020299999999999997,132e-7,155,444],[435,.2,965,.00010400000000000001,147e-8,359,586],[245,.24,876,132e-7,102,648,343],[584,.31,759,459e-6,388e-8,102,71],[.54,.19,988,43700000000000005e-21,66,.0578,149],[489,.17,956,502e-7,29,252,506],[493,.22,993,.0007700000000000001,359e-7,252,207],[743,.14,115,.49,0,284,765],[116,.08,742,.00011399999999999999,289,.95,.63],[275,.07,977,.00575,.00027400000000000005,955,236],[396,.17,939,47,429e-6,205,557],[222,.15,945,37000000000000006e-22,901,.18,229],[196,.08,835,46e-7,821,113,214],[493,.27,993,.0007700000000000001,359e-7,252,207],[294,.13,937,686e-7,.00471,342,307],[542,.23,996,.0008810000000000001,0,379,169]],v={danceability:{count:308,mean:351.9369756494,std:177.941736142,min:.0642,"25%":238.5,"50%":351,"75%":478.75,max:785},popularity:{count:308,mean:.2498051948,std:.1373408266,min:0,"25%":.16,"50%":.23,"75%":.33,max:.77},energy:{count:308,mean:774.0679821753,std:296.1412424319,min:.00401,"25%":718,"50%":906.5,"75%":963.25,max:998},acousticness:{count:308,mean:40.9806956957,std:163.1451038417,min:109e-8,"25%":6035e-8,"50%":7525e-7,"75%":.00672,max:953},instrumentalness:{count:308,mean:204.907109477,std:313.3436522636,min:0,"25%":67975e-8,"50%":.03445,"75%":365.75,max:971},liveness:{count:308,mean:252.9452220779,std:262.4485181884,min:.0203,"25%":44.4875,"50%":179,"75%":347.5,max:989},valence:{count:308,mean:280.7883938312,std:219.1640342526,min:.0321,"25%":123.75,"50%":251,"75%":422.75,max:964}},b={names:f,labels:g,columns:p,values:w,statistics:v},y=Object.freeze({__proto__:null,names:f,labels:g,columns:p,values:w,statistics:v,default:b}),A=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1e3,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199],I=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],k=["x","y","z"],B=[[354.353,59.583,25.541],[355.459,122.502,45.178],[359.823,55.527,22.241],[360.121,53.385,22.519],[362.306,124.112,51.508],[362.623,122.319,44.728],[363.843,64.337,21.555],[364.286,69.572,21.051],[364.476,126.986,51.558],[366.852,27.708,22.695],[371.849,56.09,14.62],[372.03,57.295,15.459],[373.438,43.106,16.058],[373.688,119.783,35.191],[375.985,34.369,17.926],[378.71,81.16,14.5],[379.469,129.094,52.416],[379.845,105.958,22.279],[380.772,49.885,13.777],[383.903,123.274,37.927],[383.934,130.246,46.63],[389.241,93.401,15.352],[390.074,78.891,13.047],[391.72,129.545,51.298],[392.01,73.567,14.164],[393.125,131.446,54.835],[394.645,50.778,12.397],[394.795,129.578,42.795],[395.658,100.036,14.609],[395.832,100.381,14.591],[396.046,115.856,24.576],[397.339,103.288,17],[397.648,82.606,11.272],[398.221,95.162,13.147],[402.134,132.19,56.155],[406.357,118.833,25.78],[406.616,124.073,34.317],[409.853,76.051,9.889],[410.68,79.499,10.019],[415.588,113.356,78.244],[416.705,116.919,70.276],[417.45,124.172,36.812],[419.873,113.574,26.125],[420.29,124.023,69.898],[420.359,81.692,11.35],[420.42,86.531,12.662],[420.788,84.461,11.773],[422.569,97.365,16.122],[423.18,114.654,79.764],[425.167,128.447,78.845],[425.631,126.095,70.405],[426.471,124.768,64.651],[427.534,123.779,79.755],[428.33,128.991,83.211],[429.292,96.764,140.609],[429.364,107.745,23.136],[430.657,105.731,24.419],[430.95,123.264,68.878],[431.167,87.232,13.731],[431.208,100.579,21.053],[431.329,128.067,76.194],[431.399,114.906,69.995],[431.491,125.977,72.387],[431.574,96.006,18.595],[433.268,123.058,65.093],[433.652,129.991,76.062],[434.303,119.663,39.684],[434.318,130.289,75.931],[435.454,116.928,69.786],[435.528,110.925,127.056],[435.579,119.892,78.288],[435.649,109.348,79.654],[435.745,121.515,88.092],[435.924,122.617,48.265],[436.158,122.22,47.573],[436.392,118.812,37.67],[436.477,104.707,75.533],[437.245,96.162,137.681],[437.431,123.604,60.153],[438.459,117.008,80.622],[438.578,120.52,96.904],[438.684,121.887,92.275],[438.801,93.613,19.564],[439.029,108.977,28.73],[439.255,118.705,104.14],[440.145,119.045,83.113],[440.695,98.877,22.491],[441.191,89.323,139.957],[441.25,85.791,14.972],[441.833,116.011,70.434],[442.914,114.101,108.861],[443.33,118.497,65.576],[443.518,126.466,74.857],[444.366,125.088,73.591],[444.454,116.102,45.955],[444.914,124.999,73.83],[446.091,118.096,97.765],[446.32,108.117,37.591],[446.418,112.587,69.406],[446.561,103.085,70.042],[447.296,100.826,127.992],[447.379,117.234,54.135],[447.596,99.127,129.413],[448.406,104.062,33.813],[449.008,102.095,31.648],[449.634,98.988,29.41],[450.125,98.163,72.331],[452.681,122.605,75.442],[453.142,114.327,93.005],[454.435,113.988,74.415],[455.156,104.69,40.915],[455.806,114.404,77.015],[455.868,113.568,57.391],[456.267,92.907,126.052],[457.305,107.806,80.309],[457.732,106.54,82.02],[457.816,113.342,73.902],[457.894,107.921,105.22],[458.229,114.887,75.351],[459.045,94.898,120.775],[459.254,116.189,76.604],[460.066,109.491,79.619],[460.569,108.84,69.285],[461.95,92.466,36.902],[464.77,111.782,75.947],[466.344,104.893,79.541],[466.545,106.845,79.988],[467.705,107.101,69.15],[468.342,100.115,52.13],[470.518,107.071,73.479],[475.889,43.567,142.015],[477.015,44.943,147.713],[477.614,85.003,124.663],[479.374,65.086,139.898],[479.378,88.958,122.444],[480.505,80.876,131.561],[480.914,97.615,95.685],[483.147,80.128,114.64],[485.037,84.136,124.033],[485.186,82.113,129.894],[486.749,48.092,137.739],[488.488,67.066,140.031],[490.643,52.364,136.161],[491.216,53.963,135.67],[249.089,-170.062,114.667],[255.729,-160.912,100.235],[255.885,-161.085,111.705],[257.346,-156.339,98.755],[257.604,-158.037,110.227],[257.794,-163.745,88.652],[258.151,-169.225,83.891],[258.469,-155.795,101.619],[259.845,-153.118,97.26],[263.445,-164.012,85.522],[263.467,-156.427,103.682],[263.518,-160.248,109.436],[264.082,-134.478,106.777],[264.218,-145.438,93.042],[264.977,-153.007,88.869],[265.055,-170.489,121.479],[265.829,-171.055,122.253],[265.901,-161.529,89.305],[266.557,-171.04,117.7],[266.861,-138.697,111.095],[267.263,-157.206,113.654],[270.585,-139.415,109.982],[270.769,-127.391,87.47],[271.226,-115.051,98.89],[271.297,-166.429,81.415],[271.471,-113.972,116.199],[272.093,-124.37,113.56],[272.87,-129.549,109.27],[273.022,-136.385,111.969],[273.715,-120.397,113.585],[273.739,-146.56,86.577],[273.827,-116.553,86.517],[274.072,-133.517,99.042],[274.176,-124.639,98.738],[274.487,-98.419,110.18],[276.485,-122.7,87.634],[276.486,-117.762,112.462],[276.651,-108.33,113.916],[276.68,-114.098,113.63],[277.112,-121.911,102.091],[278.007,-125.97,88.561],[278.041,-127.059,91.53],[279.231,-124.658,95.641],[280.927,-88.277,100.728],[284.248,-74.06,101.677],[311.221,-169.442,34.356],[313.322,-168.532,50.247],[315.725,-166.812,37.045],[315.806,-170.804,51.863],[316.788,-166.793,50.876],[317.654,-168.261,34.334],[318.112,-78.366,50.336],[318.929,-165.503,38.499],[322.118,-72.82,46.518],[324.244,-82.027,54.711],[324.827,-74.624,37.945],[325.654,-115.387,59.705],[325.829,-168.795,60.946],[326.1,-166.05,59.425],[326.347,-165.697,65.172],[326.39,-117.053,37.051],[327.015,-167.301,65.045],[327.602,-164.59,47.489],[328.325,-143.868,46.693],[328.589,-149.539,46.861],[328.66,-162.441,53.826],[329.34,-137.739,53.086],[329.669,-113.433,52.031],[330.128,-62.651,42.611],[330.524,-151.377,36.963],[330.827,-167.732,26.081],[331.631,-159.972,62.37],[331.634,-95.128,38.552],[332.751,-151.351,51.591],[333.183,-128.212,58.376],[334.06,-161.131,48.908],[334.449,-137.19,54.495],[334.806,-119.93,60.516],[334.859,-147.129,44.621],[335.221,-144.981,60.188],[335.354,-128.255,47.626],[336.587,-132.143,59.13],[336.744,-120.344,39.162],[336.793,-148.487,61.6],[337.14,-120.839,41.661],[337.844,-146.495,55.391],[337.973,-136.486,40.96],[338.332,-125.091,36.09],[338.381,-125.946,36.138],[339.45,-138.543,46.903],[340.053,-131.019,56.025],[340.23,-143.664,58.296],[341.134,-149.024,36.023],[341.424,-139.787,62.063],[342.124,-151.764,58.707],[342.395,-136.704,37.75],[342.539,-133.432,58.853],[343.181,-136.662,36.357],[344.336,-155.134,59.409],[63.13,92.752,11.44],[65.138,106.429,46.867],[65.515,90.501,142.013],[66.09,87.486,135.328],[66.618,83.822,143.842],[67.77,80.533,-10.63],[68.222,96.994,129.09],[69.406,90.553,9.662],[69.898,86.937,-9.066],[70.433,102.137,16.257],[72.712,75.351,-2.868],[72.952,71.457,160.312],[75.036,65.453,-12.28],[77.703,81.029,-2.106],[79.496,82.604,-9.382],[80.023,71.554,149.798],[81.745,59.995,166.551],[83.202,66.942,165.467],[85.148,73.021,158.517],[87.201,66.82,154.847],[90.977,53.335,169.04],[94.229,55.861,-10.24],[95.899,39.525,-13.196],[97.335,43.265,-21.748],[99.032,51.903,-20.891],[99.134,54.21,-19.491],[100.779,41.618,-7.672],[107.633,45.468,-17.265],[112.878,40.821,154.891],[119.185,31.379,148.119],[120.036,27.291,3.303],[124.548,36.524,157.364],[126.815,33.805,159.394],[128.923,21.846,-7.627],[132.371,24.82,12.417],[141.587,19.065,136.736],[144.336,23.195,131.328],[144.737,23.261,25.186],[144.977,30.654,139.052],[148.602,24.173,29.318],[149.83,19.834,30.136],[155.016,23.351,14.745],[157.009,21.153,138.81],[157.434,17.003,33.601],[158.672,20.651,136.944],[159.052,26.107,137.947],[163.105,25.545,23.467],[164.995,25.779,25.348],[166.662,21.875,43.465],[168.507,37.439,108.122],[171.952,28.021,125.032],[175.499,25.631,48.228],[176.705,27.465,110.721],[176.942,59.777,60.126],[178.981,65.253,62.721],[178.997,59.527,58.056],[179.575,53.821,64.595],[179.752,55.317,92.787],[180.627,67.855,62.18],[181.807,53.431,69.734],[182.509,57.71,56.342],[184.391,56.548,77.86],[184.453,52.614,69.051],[186.715,42.156,51.376],[187.291,50.756,74.014],[187.475,50.413,86.562],[187.584,53.031,78.85],[187.965,55.886,53.428],[188.977,48.326,53.622],[189.106,64.227,83.75],[189.924,57.091,77.905],[192.89,51.113,59.931],[194.845,50.645,91.054],[198.111,63.021,74.335],[199.902,62.445,68.794],[288.911,69.232,124.172],[292.762,82.134,122.612],[297.169,71.618,119.137],[298.417,81.039,120.574],[299.351,80.689,121.715],[299.711,77.348,118.619],[302.395,123.146,102.646],[305.736,109.455,119.182],[306.822,94.636,114.25],[307.599,127.34,101.402],[308.383,61.032,116.196],[308.776,111.914,122.727],[309.067,103.704,92.486],[310.234,72.462,116.598],[310.4,61.067,118.035],[310.876,128.956,101.077],[310.944,111.742,82.104],[311.289,117.429,116.693],[311.754,98.054,88.649],[313.686,77.822,118.901],[315.377,85.656,119.307],[316.89,80.183,122.848],[317.242,112.294,84.801],[318.15,66.955,109.473],[318.209,95.961,100.262],[318.278,88.781,101.613],[318.457,87.825,115.354],[318.582,76.161,112.666],[318.737,96.565,77.749],[318.888,79.308,126.613],[319.008,110.576,106.955],[319.052,111.914,92.285],[319.325,91.556,105.881],[321.145,107.648,106.863],[321.4,109.686,109.177],[321.448,66.008,128.286],[321.741,95.021,120.798],[322.114,98.681,110.059],[322.444,68.877,130.399],[322.622,106.67,91.94],[322.74,100.48,86.367],[323.157,92.437,126.976],[323.302,102.196,91.635],[323.423,118.743,115.111],[323.828,132.236,96.277],[324.394,112.706,111.001],[324.664,103.529,109.948],[327.464,73.012,112.901],[327.614,91.273,131.845],[327.866,42.288,116.76],[328.191,80.44,136.049],[328.957,110.257,89.024],[330.871,106.805,126.311],[331.134,106.6,90.032],[332.3,22.379,118.214],[332.673,108.154,103.596],[333.648,88.805,113.205],[333.711,105.003,107.479],[335.551,27.471,122.687],[335.761,83.493,148.301],[335.805,85.577,119.544],[337.111,54.622,125.324],[337.166,20.599,118.952],[337.394,38.942,124.508],[340.414,88.162,140.296],[340.841,83.447,120.244],[341.208,88.292,120.711],[341.364,101.24,116.345],[341.809,26.587,122.415],[342.419,55.425,126.796],[342.758,106.648,111.817],[343.515,88.762,119.081],[344.126,55.332,125.746],[344.466,16.142,124.258],[346.196,17.656,122.942],[347.292,17.839,123.506],[348.642,78.977,128.14],[349.236,41.205,128.503],[349.51,23.88,126.087],[350.26,87.84,127.652],[353.787,11.366,121.976],[357.101,27.432,130.418],[358.861,104.252,125.994],[358.965,105.25,125.581],[360.176,52.696,133.493],[360.356,66.25,132.672],[362.091,56.333,133.394],[366.014,104.702,123.592],[369.164,102.931,126.99],[369.804,75.362,136.159],[370.577,74.304,136.192],[372.29,38.335,138.252],[375.332,45.144,140.138],[382.176,50.832,142.742],[386.978,94.738,136.251],[387.189,75.097,142.576],[387.439,70.55,142.162],[388.366,87.06,139.346],[395.143,98.512,139.965],[398.836,91.142,143.595],[403.161,66.268,145.667],[407.049,81.976,146.063],[414.926,80.163,147.204],[417.864,93.026,143.954],[418.905,100.136,139.882],[418.986,102.406,139.315],[320.47,126.231,77.663],[324.268,101.907,71.16],[324.795,104.172,67.997],[324.98,132.401,75.494],[326.012,107.322,66.438],[326.518,123.192,75.15],[327.497,104.395,62.074],[327.713,111.13,67.609],[330.889,106.141,60.358],[333.03,152.901,75.185],[333.109,143.202,77.811],[333.406,139.402,78.01],[333.604,124.428,74.325],[333.717,104.392,73.978],[333.879,112.371,81.447],[334.864,119.24,63.943],[335.001,114.39,70.872],[335.321,121.57,75.007],[335.726,110.268,65.161],[336.078,116.592,64.361],[337.366,146.15,74.127],[337.463,111.378,96.901],[338.556,113.119,53.732],[339.028,113.356,68.531],[339.915,125.161,73.902],[341.194,116.04,100.171],[341.863,114.23,46.311],[341.9,106.866,108.647],[343.138,128.894,75.507],[343.438,113.27,69.108],[344.121,107.461,76.757],[344.126,121.002,58.106],[344.713,119.978,87.621],[344.75,120.053,86.978],[345.308,119.256,88.697],[345.794,145.425,75.834],[346.543,116.796,50.136],[347.154,112.098,72.018],[347.78,140.021,79.641],[348.642,118.286,45.356],[349.792,110.833,72.857],[350.816,124.012,96.77],[351.475,128.443,94.429],[351.506,124.057,86.387],[351.73,123.288,83.536],[356.246,126.412,51.977],[356.8,127.96,71.862],[357.123,123.511,68.817],[357.693,135.999,75.544],[358.738,150.969,79.155],[358.899,127.55,57.918],[359.119,130.939,69.295],[359.361,122.041,81.744],[359.486,129.475,97.988],[359.716,137.144,78.358],[360.906,129.318,64.556],[361.143,122.63,70.333],[362.097,121.344,109.36],[362.474,124.728,104.516],[363.336,152.925,77.145],[363.836,114.225,117.229],[364.15,126.44,67.726],[365.413,126.355,63.441],[365.444,141.232,75.973],[365.734,122.392,70.018],[365.764,128.592,64.37],[367.348,129.776,91.333],[368.35,128.009,90.451],[368.546,147.191,78.553],[369.414,128.799,92.134],[371.445,133.062,93.052],[372.294,131.091,100.127],[372.671,123.895,114.672],[373.333,154.898,78.285],[375.248,116.667,80.722],[375.508,117.422,122.717],[376.713,150.217,75.521],[376.904,131.257,81.512],[377.19,130.924,66.675],[377.245,109.538,126.956],[377.575,111.17,127.397],[378.115,133.234,74.899],[378.699,122.017,80.76],[379.959,131.213,92.025],[380.811,131.2,65.433],[381.726,117.149,80.475],[381.729,125.759,67.141],[382.024,127.06,66.368],[382.121,117.141,80.407],[384.059,147.401,77.411],[384.616,123.634,83.532],[384.952,140.703,77.507],[385.091,117.182,123.821],[385.471,119.645,80.568],[386.275,124.277,120.15],[386.429,128.604,86.75],[386.998,136.281,74.911],[387.088,120.029,120.469],[387.48,132.011,72.573],[387.535,123.32,70.225],[387.959,135.086,84.211],[389.498,138.325,74.814],[389.55,139.786,75.038],[389.709,130.216,101.332],[389.74,134.122,65.904],[390.649,140.52,75.19],[391.545,131.575,60.629],[392.941,114.574,74.945],[395.139,122.479,80.667],[396.142,121.061,70.983],[396.174,132.262,74.671],[396.411,124.366,119.217],[398.21,132.388,56.398],[399.57,131.368,97.206],[399.819,130.803,89.363],[400.244,131.432,70.653],[400.445,116.404,75.329],[400.607,124.306,68.798],[401.551,124.767,68.166],[401.926,114.133,74.572],[403.293,125.152,84.139],[403.515,130.247,64.605],[404.078,133.963,76.947],[405.259,133.967,75.113],[406.772,131.453,84.439],[406.998,131.235,65.752],[407.87,114.856,78.743],[407.962,130.673,57.02],[408.417,126.401,80.658],[411.299,130.168,73.518],[411.546,128.505,99.091],[412.792,129.886,81.635],[414.592,133.872,75.709],[415.469,126.235,69.661],[415.686,123.654,119.113],[415.823,122.532,118.696],[417.736,124.477,80.241],[420.914,126.636,99.023],[425.589,123.397,112.193],[426.718,135.696,76.175],[426.955,137.491,75.568],[274.17,26.68,77.96],[278.375,20.24,77.293],[279.327,19.669,77.283],[279.556,29.814,78.015],[281.655,32.503,112.329],[282.242,26.506,113.853],[282.322,34.536,75.012],[282.56,39.221,35.702],[282.598,23.465,73.169],[283.204,40.575,124.837],[283.229,13.044,122.38],[284.58,-58.73,107.117],[284.808,-52.583,119.056],[284.906,26.308,125.157],[284.932,44.934,75.206],[285.145,42.94,35.056],[285.179,-40.066,120.795],[285.279,.969,122.702],[285.529,-56.992,107.795],[285.79,19.07,124.963],[285.883,31.145,35.951],[287.45,44.648,113.721],[288.466,14.474,77.953],[288.645,-71.899,116.887],[288.757,27.066,72.143],[289.046,-63.638,111.695],[289.296,22.226,34.973],[289.336,51.111,119.966],[289.492,49.686,117.027],[289.675,23.291,79.79],[289.857,42.46,37.01],[290.254,39.658,112.307],[290.325,57.138,83.925],[290.328,55.257,116.402],[290.504,11.387,76.164],[290.709,11.489,75.917],[290.786,37.974,111.702],[291.117,36.546,84.537],[291.55,62.449,110.065],[292.093,61.193,68.498],[292.568,44.583,108.038],[292.734,-33.111,105.616],[292.788,23.095,77.018],[292.867,36.958,65.093],[292.895,-79.433,116.35],[293.09,28.988,112.726],[293.212,46.533,133.236],[294.152,45.369,88.189],[294.683,-13.288,126.736],[294.882,51.397,126.005],[294.942,-39.006,124.187],[294.974,-51.453,122.56],[295.113,11.091,24.033],[295.947,10.985,73.131],[296.272,-65.592,119.317],[296.989,-51.008,114.649],[297.913,16.006,81.589],[298.075,17.482,79.503],[298.552,11.116,122.032],[298.762,-51.156,115.621],[298.875,-.582,33.308],[298.918,41.995,43.036],[299.025,30.518,124.683],[299.409,5.251,74.613],[300.118,-23.84,116.006],[300.756,-53.184,106.561],[300.807,-51.549,108.257],[301.976,-51.246,106.702],[302.736,11.872,39.349],[304.093,14.231,69.764],[304.307,38.488,126.435],[304.387,35.778,124.785],[304.39,9.072,72.922],[305.514,31.035,97.61],[306.657,54.244,27.404],[307.727,-47.83,34.711],[308.519,-45.646,42.244],[308.526,-23.941,39.23],[309.192,-34.375,48.366],[309.207,49.911,50.788],[309.572,-32.43,26.928],[309.811,2.104,71.854],[310.225,60.46,50.686],[312.525,-48.02,51.148],[314.837,-13.833,34.188],[315.572,-3.759,77.526],[317.028,-62.907,43.99],[317.032,38.088,112.103],[317.13,.26,80.866],[317.195,-4.614,81.536],[317.199,13.395,49.422],[317.2,-3.441,83.746],[318.057,42.268,113.558],[318.074,-6.247,78.435],[318.402,-51.882,52.93],[318.796,65.045,35.958],[319.733,-33.256,30.748],[319.829,-20.171,25.054],[321.055,4.742,92.294],[321.357,7.191,56.488],[322.464,14.209,108.738],[322.61,22.877,109.887],[322.905,24.11,110.009],[323.476,16.586,110.195],[323.48,25.214,42.174],[323.489,1.439,70.961],[323.587,1.453,70.293],[323.844,29.35,111.396],[325.02,-44.878,46.661],[325.198,-47.527,34.189],[326.101,-8.55,74.54],[326.579,54.835,37.345],[326.966,-46.438,43.328],[329.058,65.343,36.741],[329.29,59.89,36.315],[330.781,23.92,35.441],[331.004,-50.313,42.038],[331.068,-4.733,81.782],[333.045,12.811,43.645],[333.168,9.122,47.589],[333.608,14.665,118.561],[334.385,36.044,31.359],[336.894,57.666,32.13],[337.333,-50.534,28.721],[337.876,4.113,102.127],[338.296,-51.672,31.131],[338.491,-10.809,73.811],[338.531,8.503,113.877],[341.251,39.02,31.159],[342.056,49.358,28.543],[342.279,-42.708,37.056],[342.425,40.618,31.155],[343.508,38.793,30.439],[343.788,41.166,29.974],[347.491,8.292,41.372],[351.001,26.45,26.796],[352.264,20.523,26.502],[354.796,20.226,30.023],[470.411,85.967,33.821],[470.477,88.744,37.978],[471.945,94.389,84.808],[472.772,52.253,12.24],[474.899,101.596,54.73],[475.186,96.991,77.535],[476.074,69.338,18.046],[477.501,95.507,74.217],[478.35,101.136,65.18],[478.566,83.332,56.887],[478.691,98.02,84.606],[478.746,103.207,75.699],[478.941,101.068,74.715],[479.355,97.652,68.262],[479.407,103.039,85.449],[479.859,80.873,29.476],[481.251,67.268,16.324],[481.365,96.481,61.736],[481.732,103.496,83.334],[481.926,35.796,10.661],[482.211,75.231,60.078],[482.806,102.039,62.597],[483.958,40.909,7.888],[484.079,83.684,68.201],[487.268,44.751,28.935],[487.51,49.199,15.312],[487.577,100.065,84.738],[487.857,92.853,78.913],[488.595,46.542,14.75],[488.735,40.412,58.747],[488.884,35.108,49.395],[489.017,44.931,18.164],[489.148,42.948,106.3],[489.243,41.788,41.383],[489.328,65.888,102.192],[489.578,63.186,109.848],[489.662,46.046,26.764],[489.96,84.991,63.21],[490.643,44.117,112.26],[490.855,65.076,56.546],[491.346,47.561,114.48],[491.546,59.793,100.875],[491.568,32.676,82.71],[492.024,80.062,91.056],[492.323,76.57,93.557],[492.962,38.683,88.182],[493.003,60.62,121.455],[493.111,-35.652,120.456],[493.439,96.535,83.611],[493.518,96.507,64.295],[493.597,90.886,75.529],[494.136,86.223,77.796],[494.368,87.65,80.027],[494.488,87.963,82.365],[494.589,95.75,65.917],[495.037,-25.416,112.45],[495.449,88.237,76.184],[495.503,85.853,80.721],[495.791,33.266,114.71],[496.693,86.503,74.67],[497.36,-25.845,110.932],[498.292,35.03,57.537],[498.625,24.866,118.798],[500.28,87.979,83.928],[500.314,44.551,94.44],[501.153,46.06,115.439],[501.87,39.416,98.327],[502.83,45.676,113.142],[502.962,-44.725,114.814],[503.806,-.649,42.312],[503.921,40.858,96.821],[504.207,-14.79,114.819],[505.803,.941,33.289],[506.054,80.008,73.694],[506.154,80.135,72.278],[506.235,76.455,71.021],[507.836,18.789,130.166],[508.145,4.099,29.845],[508.288,44.648,52.968],[508.767,36.599,120.966],[509.203,-21.138,43.338],[509.265,30.361,83.486],[509.703,35.541,57.278],[509.705,10.03,27.288],[510.698,22.615,125.223],[510.945,30.677,33.883],[511.241,34.101,32.498],[511.84,23.965,124.35],[511.848,79.516,77.865],[512.308,24.978,32.61],[512.443,71.024,87.371],[513.763,-21.101,30.818],[514.192,77.907,76.507],[514.727,26.749,124.062],[515.881,18.064,82.494],[516.378,68.857,85.122],[517.504,-30.046,30.653],[517.64,64.121,63.996],[518.355,-31.923,30.892],[518.438,65.628,84.537],[518.568,66.508,82.032],[521.721,20.327,86.318],[523.005,61.532,67.771],[523.291,29.03,63.091],[524.629,63.65,72.922],[526.719,35.144,89.207],[529.209,64.497,77.532],[529.518,35.951,60.796],[532.238,48.513,86.757],[533.91,48.858,66.061],[535.031,62.885,76.63],[537.154,54.848,76.665],[540.56,51.919,75.583],[542.587,47.186,78.064],[544.812,33.053,83.416],[546.096,25.635,78.183],[546.581,40.681,74.579],[546.781,26.063,85.262],[548.653,18.667,77.009],[551.636,1.376,76.805],[552.937,-4.798,73.591],[553.082,-21.971,76.136],[553.126,-39.434,74.27],[553.503,-41.611,73.669],[553.894,21.899,75.885],[554.281,-10.585,74.047],[554.597,-43.242,73.792],[556.496,2.272,76.221],[556.73,3.753,75.443],[193.012,94.861,64.524],[194.113,90.702,63.118],[199.41,124.937,67.25],[200.894,121.179,106.459],[201.965,75.149,76.106],[202.114,68.472,96.077],[202.49,125.142,80.111],[204.769,122.95,58.263],[204.831,137.173,78.645],[205.062,101.322,57.608],[205.984,86.643,95.767],[206.048,84.811,78.065],[206.94,121.627,55.677],[207.03,124.119,50.967],[207.144,86.848,70.131],[207.32,124.28,82.833],[208.43,97.247,63.993],[209.324,93.696,96.73],[209.644,90.606,95.176],[210.265,122.255,101.973],[210.604,89.512,69.317],[211.08,137.683,66.592],[211.285,91.03,68.063],[211.391,53.676,80.36],[211.793,109.915,101.915],[212.097,118.106,103.298],[212.14,127.878,48.032],[212.344,122.157,72.104],[212.361,77.335,74.113],[212.793,109.173,110.622],[213.546,143.757,78.319],[213.8,111.58,99.062],[213.92,126.048,116.142],[215.169,105.702,93.734],[215.305,106.842,93.765],[215.77,109.067,115.021],[216.065,79.265,71.523],[216.459,134.504,58.408],[217.219,81.361,89.932],[217.499,142.289,63.733],[217.683,119.231,104.637],[218.587,59.232,71.49],[219.564,75.578,68.132],[219.909,85.402,78.621],[221.868,116.955,96.561],[222.234,116.761,96.015],[222.52,57.19,84.886],[223.852,79.116,69.009],[223.86,87.507,93.517],[224.304,127.917,97.836],[224.543,86.437,66.491],[224.78,148.623,99.842],[225.56,87.402,66.214],[225.753,61.193,66.926],[226.344,109.789,90.41],[228.482,113.035,117.089],[229.447,110.48,70.051],[229.954,159.535,104.318],[230.14,80.343,60.498],[230.635,161.564,104.092],[230.868,73.386,98.824],[231.054,75.413,99.643],[234.467,66.115,72.199],[234.747,160.143,107.761],[235.683,139.567,113.675],[236.205,81.387,65.735],[236.658,101.857,91.41],[237.579,94.147,89.973],[237.9,114.14,87.172],[238.205,129.836,44.208],[238.464,82.154,66.209],[238.647,143.572,118.332],[238.684,80.044,69.308],[238.882,96.866,83.024],[239.03,78.5,70.518],[239.418,167.055,73.285],[239.507,97.776,88.512],[239.674,79.511,89.557],[239.763,112.422,71.654],[240.04,118.613,49.273],[240.335,125.232,113.596],[240.395,79.778,69.639],[240.824,82.186,68.16],[240.849,90.282,56.488],[241.244,89.944,62.006],[241.285,66.801,65.565],[241.58,118.959,57.027],[241.935,145.983,77.968],[243.55,154.523,49.144],[243.646,116.567,98.317],[243.655,83.587,67.046],[244.208,109.928,57.253],[244.522,118.044,50.251],[244.969,112.042,76.765],[245.045,118.892,61.792],[245.425,135.266,81.128],[245.468,159.137,88.287],[245.694,146.662,116.988],[245.9,136.86,75.486],[246.172,137.638,73.64],[246.38,87.641,61.55],[246.553,117.279,75.428],[246.733,105.276,101.485],[246.794,111.305,70.501],[248.32,155.752,94.839],[248.942,117.836,105.142],[249.442,115.89,105.71],[249.905,118.029,91.782],[250.025,116.872,66.847],[250.208,111,79.53],[251.018,133.871,52.715],[251.249,114.827,80.453],[251.391,116.764,94.762],[251.534,151.401,95.702],[252.638,145.701,56.431],[252.988,149.001,60.342],[253.919,115.23,81.438],[255.465,129.887,98.237],[255.513,116.267,70.054],[256.084,118.892,96.966],[258.009,112.336,73.816],[258.319,114.994,82.671],[259.772,118.862,68.06],[260.651,116.618,67.801],[261.294,123.937,83.661],[263.046,129.357,75.948],[263.805,128.252,71.828],[263.927,107.215,73.893],[264.595,122.024,87.266],[265.091,119.111,57.103],[265.58,114.092,64.949],[265.767,120.312,57.961],[265.998,108.469,75.929],[267.884,120.992,74.422],[268.432,116.493,87.391],[268.616,124.92,75.592],[268.765,114.837,93.54],[273.988,113.79,87.37],[275.599,113.819,81.85],[272.197,102.749,76.763],[272.23,105.466,71.582],[272.246,113.11,68.516],[272.895,102.635,79.278],[272.906,116.766,67.492],[273.554,114.514,67.391],[273.718,115.415,65.276],[273.727,109.963,70.408],[274.786,102.654,83.13],[275.965,108.706,84.288],[276.237,106.238,65.837],[276.88,100.988,69.451],[277.098,100.815,82.098],[277.412,104.891,89.928],[277.695,109.181,86.283],[277.973,98.694,80.952],[278.929,99.059,71.378],[279.212,106.35,69.421],[279.66,120.496,72.732],[280.575,106.467,86.51],[281.287,121.086,78.792],[281.974,70.173,35.018],[281.984,102.116,90.055],[282.287,110.039,85.806],[282.425,100.887,68.495],[282.582,102.482,85.978],[283.006,101.743,70.948],[283.747,103.65,69.839],[283.856,110.573,71.264],[284.42,108.155,70.835],[284.543,76.579,33.705],[284.76,69.317,34.246],[285.11,102.74,66.295],[285.816,101.089,83.553],[287.255,110.12,67.312],[289,99.275,90.645],[289.059,110.481,87.205],[289.734,121.412,76.917],[290.216,110.08,68.376],[291.248,74.58,33.583],[291.254,81.014,33.296],[291.968,105.982,70.157],[292.176,99.613,52.262],[293.053,95.365,49.236],[293.195,113.229,68.583],[293.221,107.857,37.257],[293.616,96.679,34.657],[293.779,94.54,38.781],[294.41,97.649,62.769],[296.037,92.932,73.656],[296.462,127.357,78.643],[297.756,71.886,64.626],[297.856,105.857,82.07],[297.895,127.003,78.276],[298.164,125.501,78.077],[298.374,106.281,82.286],[298.485,86.603,64.546],[298.855,96.267,60.097],[300.848,92.452,76.585],[301.549,85.677,62.29],[302.656,96.705,85.863],[303.319,111.558,71.468],[303.916,110.331,72.307],[304.399,105.865,88.035],[304.57,107.061,49.593],[304.815,95.837,65.084],[305.909,109.232,67.785],[305.911,136.036,61.809],[306.405,97.643,44.452],[306.498,100.324,45.857],[306.552,106.701,65.187],[306.901,74.025,32.383],[306.94,86.807,58.975],[307.297,105.687,47.567],[308.904,93.202,38.785],[308.931,97.576,67.891],[309.65,117.217,50.007],[310.83,79.442,34.909],[311.778,79.274,52.2],[311.802,71.089,51.285],[312.859,134.862,59.339],[312.901,105.27,61.181],[313.42,114.215,71.801],[314.161,85.132,36.843],[314.339,117.926,77.217],[316.051,101.74,66.903],[316.115,90.732,49.833],[316.848,107.448,63.339],[317.054,127.696,57.355],[317.477,80.458,43.318],[318.005,96.404,47.788],[318.337,109.708,68.468],[320.337,118.258,40.427],[320.605,98.052,63.967],[322.221,117.435,40.353],[323.894,107.911,62.34],[324.39,113.466,33.078],[324.527,97.458,48.824],[324.884,103.142,20.901],[325.382,88.111,48.162],[325.865,110.327,27.715],[326.695,82.376,18.11],[328.181,95.886,12.743],[331.671,89.271,12.407],[332.671,100.535,16.512],[332.856,97.301,17.42],[333.026,96.671,42.133],[333.625,92.205,39.6],[334.876,85.04,37.614],[335.445,106.111,45.365],[341.685,99.433,39.713],[342.666,64.547,31.932],[342.776,73.641,32.847],[343.08,81.217,31.761],[344.707,105.242,39.989],[345.332,83.012,31.156],[348.017,114.458,41.451],[348.426,110.908,41.773],[348.81,110.848,41.386],[353.116,95.992,31.568],[354.125,84.792,27.758],[354.589,75.904,27.95],[358.474,107.058,35.815],[362.282,104.267,30.653],[365.163,84.139,23.712],[369.33,97.565,22.798],[505.316,-69.209,44.561],[512.036,-62.483,48.169],[514.452,-77.641,39.38],[522.42,-85.002,34.025],[523.343,-95.107,40.387],[523.615,-84.776,48.815],[524.091,-85.035,30.941],[524.255,-73.455,30.375],[525.483,-74.294,52.265],[525.541,-69.492,38.881],[526.724,-56.333,47.925],[527.248,-72.01,33.652],[528.593,-79.256,51.427],[530.05,-72.19,39.979],[531.603,-70.745,46.922],[533.082,-166.608,50.617],[534.212,-167.092,45.438],[534.239,-89.137,49.218],[535.104,-74.919,34.755],[537.019,-97.151,47.019],[537.274,-167.695,46.483],[537.313,-102.061,38.535],[537.599,-161.095,49.801],[537.756,-165.403,50.036],[538.9,-88.51,34.568],[540.288,-150.707,37.925],[540.682,-112.628,46.946],[540.776,-135.245,44.538],[540.785,-94.637,35.542],[541.116,-149.227,45.638],[541.156,-112.277,46.578],[541.415,-145.452,42.504],[541.712,-151.094,36.821],[542.829,-160.198,54.802],[543.293,-168.553,26.035],[543.591,-145.246,47.431],[544.295,-104.705,34.446],[544.734,-118.089,31.541],[544.987,-161.282,56.766],[545.969,-151.05,53.288],[546.526,-153.364,46.678],[546.703,-140.843,48.318],[546.838,-140.014,47.633],[546.906,-135.676,32.93],[546.969,-171.025,22.388],[547.158,-134.462,32.391],[548.257,-115.05,33.696],[549.548,-119.488,34.314],[549.616,-148.464,47.258],[550.141,-162.868,26.208],[551.221,-134.517,45.9],[552.139,-135.944,35.097],[553.312,-149.261,46.21],[555.115,-146.245,32.58],[555.697,-149.567,31.355],[560.154,-145.277,44.119],[562.453,-138.587,36.358],[567.405,-142.122,45.493],[464.791,-168.965,100.23],[465.566,-170.114,125.473],[468.316,-168.674,126.713],[468.537,-167.445,120.883],[469.02,-166.462,109.2],[472.792,-169.759,121.407],[473.676,-161.403,104.667],[473.926,-166.101,123.654],[474.871,-157.165,113.281],[475.554,-168.627,121.922],[476.216,-162.305,115.81],[476.965,-168.463,104.675],[478.1,-71.451,115.646],[478.7,-158.814,102.96],[479.611,-161.648,109.881],[481.577,-169.791,125.838],[482.676,-164.717,121.18],[482.843,-137.446,104.142],[482.981,-158.438,121.55],[483.063,-140.047,110.311],[483.763,-141.543,105.196],[483.977,-64.184,121.699],[483.994,-162.732,97.387],[485.131,-87.679,113.088],[485.204,-77.11,111.956],[485.441,-152.398,116.872],[485.79,-158.137,111.407],[486.921,-144.769,116.398],[487.063,-152.186,105.84],[489.811,-143.224,103.805],[489.911,-54.958,107.77],[490.399,-139.554,104.198],[491.585,-133.539,120.05],[493.439,-128.079,115.132],[493.744,-136.785,106.946],[494.563,-128.896,119.103],[494.589,-144.234,106.57],[494.628,-150.033,106.052],[496.741,-86.714,118.531],[497.248,-75.757,123.579],[498.285,-110.512,115.944],[500.321,-81.426,106.352],[501.583,-147.863,107.75],[503.634,-57.81,104.698],[505.325,-147.461,115.315]],x={x:{count:1200,mean:351.5825575,std:107.940879597,min:63.13,"25%":284.51225,"50%":335.271,"75%":436.41325,max:567.405},y:{count:1200,mean:44.4816041667,std:91.5668068743,min:-171.055,"25%":17.6125,"50%":80.4955,"75%":111.914,max:167.055},z:{count:1200,mean:75.9319608333,std:34.36417168,min:-21.748,"25%":50.31475,"50%":75.2675,"75%":102.7245,max:169.04}},D={names:A,labels:I,columns:k,values:B,statistics:x},T=Object.freeze({__proto__:null,names:A,labels:I,columns:k,values:B,statistics:x,default:D});function E(e){let t=e.length,a=0,i=0;for(let r=0;r<t;++r){let t=e[r],s=a+t;Math.abs(a)>=Math.abs(t)?i+=a-s+t:i+=t-s+a,a=s}return a+i}class S{constructor(e=null,t=null,a=null){if(this._rows=e,this._cols=t,this._data=null,e&&t){if(!a)return this._data=new Float64Array(e*t),this;if("function"==typeof a){this._data=new Float64Array(e*t);for(let i=0;i<e;++i)for(let e=0;e<t;++e)this._data[i*t+e]=a(i,e);return this}if("string"==typeof a){if("zeros"===a)return new S(e,t,0);if("identity"===a||"I"===a){this._data=new Float64Array(e*t);for(let a=0;a<e;++a)this._data[a*t+a]=1;return this}if("center"===a&&e==t){this._data=new Float64Array(e*t),a=(t,a)=>(t===a?1:0)-1/e;for(let i=0;i<e;++i)for(let e=0;e<t;++e)this._data[i*t+e]=a(i,e);return this}}if("number"==typeof a){this._data=new Float64Array(e*t);for(let i=0;i<e;++i)for(let e=0;e<t;++e)this._data[i*t+e]=a;return this}}return this}static from(e,t="row"){if(e instanceof S)return e.clone();if(!(Array.isArray(e)||e instanceof Float64Array)){if("number"==typeof e)return new S(1,1,e);throw"error"}{let a=e.length;if(0===a)throw"Array is empty";if(!(Array.isArray(e[0])||e[0]instanceof Float64Array)){if("row"===t)return new S(1,a,((t,a)=>e[a]));if("col"===t)return new S(a,1,(t=>e[t]));if("diag"===t)return new S(a,a,((t,a)=>t==a?e[t]:0));throw"1d array has NaN entries"}if(Array.isArray(e[0])||e[0]instanceof Float64Array){let t=e[0].length;for(let i=0;i<a;++i)if(e[i].length!==t)throw"various array lengths";return new S(a,t,((t,a)=>e[t][a]))}}}row(e){const t=this._data,a=this._cols;return t.subarray(e*a,(e+1)*a)}*iterate_rows(){const e=this._cols,t=this._rows,a=this._data;for(let i=0;i<t;++i)yield a.subarray(i*e,(i+1)*e)}*[Symbol.iterator](){for(const e of this.iterate_rows())yield e}set_row(e,t){let a=this._cols;if(Array.isArray(t)&&t.length===a){let i=e*a;for(let e=0;e<a;++e)this._data[i+e]=t[e]}else if(t instanceof S&&t.shape[1]===a&&1===t.shape[0]){let i=e*a;for(let e=0;e<a;++e)this._data[i+e]=t._data[e]}return this}col(e){let t=new Float64Array(this._rows);for(let a=0;a<this._rows;++a)t[a]=this._data[a*this._cols+e];return t}entry(e,t){return this._data[e*this._cols+t]}set_entry(e,t,a){return this._data[e*this._cols+t]=a,this}transpose(){return new S(this._cols,this._rows,((e,t)=>this.entry(t,e)))}get T(){return this.transpose()}inverse(){const e=this._rows,t=this._cols;let a=new S(e,2*t,((e,a)=>a>=t?e===a-t?1:0:this.entry(e,a))),i=0,r=0;for(;i<e&&r<t;){var s=0;let n=-1/0;for(let t=i;t<e;++t){let e=Math.abs(a.entry(t,r));n<e&&(s=t,n=e)}if(0==a.entry(s,r))r++;else{for(let e=0;e<2*t;++e){let t=a.entry(i,e),r=a.entry(s,e);a.set_entry(i,e,t),a.set_entry(s,e,r)}for(let s=i+1;s<e;++s){let e=a.entry(s,r)/a.entry(i,r);a.set_entry(s,r,0);for(let n=r+1;n<2*t;++n)a.set_entry(s,n,a.entry(s,n)-a.entry(i,n)*e)}i++,r++}}for(let i=0;i<e;++i){let e=a.entry(i,i);for(let r=i;r<2*t;++r)a.set_entry(i,r,a.entry(i,r)/e)}for(let i=e-1;i>=0;--i){let e=a.entry(i,i);for(let r=0;r<i;r++){let s=a.entry(r,i)/e;for(let e=r;e<2*t;++e){let t=a.entry(r,e);t-=a.entry(i,e)*s,a.set_entry(r,e,t)}}}return new S(e,t,((e,i)=>a.entry(e,i+t)))}dot(e){if(e instanceof S){let t=this;if(t.shape[1]!==e.shape[0])throw`A.dot(B): A is a ${t.shape.join(" x ")}-Matrix, B is a ${e.shape.join(" x ")}-Matrix: \n                A has ${t.shape[1]} cols and B ${e.shape[0]} rows. \n                Must be equal!`;let a=t.shape[1];return new S(t.shape[0],e.shape[1],((i,r)=>{const s=t.row(i),n=e.col(r);let o=0;for(let e=0;e<a;++e)o+=s[e]*n[e];return o}))}if(Array.isArray(e)||e instanceof Float64Array){let t=this._rows;if(e.length!==t)throw`A.dot(B): A has ${t} cols and B has ${e.length} rows. Must be equal!`;let a=new Array(t);for(let i=0;i<t;++i)a[i]=E(this.row(i).map((t=>t*e[i])));return a}throw"B must be Matrix or Array"}outer(e){let t=this,a=t._data.length;if(a!=e._data.length)return;let i=new S;return i.shape=[a,a,(a,r)=>a<=r?t._data[a]*e._data[r]:i.entry(r,a)],i}concat(e,t="horizontal"){const a=this,[i,r]=a.shape,[s,n]=e.shape;if("horizontal"==t){if(i!=s)throw`A.concat(B, "horizontal"): A and B need same number of rows, A has ${i} rows, B has ${s} rows.`;const t=new S(i,r+n,"zeros");return t.set_block(0,0,a),t.set_block(0,r,e),t}if("vertical"==t){if(r!=n)throw`A.concat(B, "vertical"): A and B need same number of columns, A has ${r} columns, B has ${n} columns.`;const t=new S(i+s,r,"zeros");return t.set_block(0,0,a),t.set_block(i,0,e),t}if("diag"==t){const t=new S(i+s,r+n,"zeros");return t.set_block(0,0,a),t.set_block(i,r,e),t}throw`type must be "horizontal" or "vertical", but type is ${t}!`}set_block(e,t,a){let[i,r]=a.shape;for(let s=0;s<i;++s)if(!(s>this._rows))for(let i=0;i<r;++i)i>this._cols||this.set_entry(s+e,i+t,a.entry(s,i));return this}get_block(e,t,a=null,i=null){const[r,s]=this.shape;if(i=i??s,(a=a??r)<=e||i<=t)throw`\n                end_row must be greater than start_row, and \n                end_col must be greater than start_col, but\n                end_row = ${a}, start_row = ${e}, end_col = ${i}, and start_col = ${t}!`;const n=new S(a-e,i-t,"zeros");for(let r=e,s=0;r<a;++r,++s)for(let e=t,a=0;e<i;++e,++a)n.set_entry(s,a,this.entry(r,e));return n}gather(e,t){const a=e.length,i=t.length,r=new S(a,i);for(let i=0;i<a;++i){const s=e[i];for(let e=0;e<a;++e){const a=t[e];r.set_entry(i,e,this.entry(s,a))}}return r}_apply_array(e,t){const a=this._data,[i,r]=this.shape;for(let s=0;s<i;++s){const i=s*r;for(let n=0;n<r;++n){const r=i+n;a[r]=e(a[r],t(s,n))}}return this}_apply_rowwise_array(e,t){return this._apply_array(t,((t,a)=>e[a]))}_apply_colwise_array(e,t){const a=this._data,[i,r]=this.shape;for(let s=0;s<i;++s){const i=s*r;for(let n=0;n<r;++n){const r=i+n;a[r]=t(a[r],e[s])}}return this}_apply(e,t){let a=this._data;if(e instanceof S){let[i,r]=e.shape,[s,n]=this.shape;if(1===i){if(n!==r)throw"cols !== value_cols";for(let i=0;i<s;++i)for(let r=0;r<n;++r)a[i*n+r]=t(a[i*n+r],e.entry(0,r))}else if(1===r){if(s!==i)throw"rows !== value_rows";for(let i=0;i<s;++i)for(let r=0;r<n;++r)a[i*n+r]=t(a[i*n+r],e.entry(i,0))}else{if(s!=i||n!=r)throw"error";for(let i=0;i<s;++i)for(let r=0;r<n;++r)a[i*n+r]=t(a[i*n+r],e.entry(i,r))}}else if(Array.isArray(e)){let i=this._rows,r=this._cols;if(e.length===i)for(let s=0;s<i;++s)for(let i=0;i<r;++i)a[s*r+i]=t(a[s*r+i],e[s]);else{if(e.length!==r)throw"error";for(let s=0;s<i;++s)for(let i=0;i<r;++i)a[s*r+i]=t(a[s*r+i],e[i])}}else for(let i=0,r=this._rows*this._cols;i<r;++i)a[i]=t(a[i],e);return this}clone(){let e=new S;return e._rows=this._rows,e._cols=this._cols,e._data=this._data.slice(0),e}mult(e){return this.clone()._apply(e,((e,t)=>e*t))}divide(e){return this.clone()._apply(e,((e,t)=>e/t))}add(e){return this.clone()._apply(e,((e,t)=>e+t))}sub(e){return this.clone()._apply(e,((e,t)=>e-t))}get shape(){return[this._rows,this._cols]}set shape([e,t,a=(()=>0)]){this._rows=e,this._cols=t,this._data=new Float64Array(e*t);for(let i=0;i<e;++i)for(let e=0;e<t;++e)this._data[i*t+e]=a(i,e);return this}get to2dArray(){return[...this.iterate_rows()]}get diag(){const e=this._rows,t=this._cols,a=Math.min(e,t);let i=new Float64Array(a);for(let e=0;e<a;++e)i[e]=this.entry(e,e);return i}get mean(){return this.sum/(this._rows*this._cols)}get sum(){return E(this._data)}get meanRows(){const e=this._data,t=this._rows,a=this._cols;let i=Float64Array.from({length:t});for(let r=0;r<t;++r){i[r]=0;for(let t=0;t<a;++t)i[r]+=e[r*a+t];i[r]/=a}return i}get meanCols(){const e=this._data,t=this._rows,a=this._cols;let i=Float64Array.from({length:a});for(let r=0;r<a;++r){i[r]=0;for(let s=0;s<t;++s)i[r]+=e[s*a+r];i[r]/=t}return i}static solve_CG(e,t,a,i=.001){const r=e.shape[0],s=t.shape[1];let n=new S(r,0);for(let o=0;o<s;++o){const s=S.from(t.col(o)).T;let l=new S(r,1,(()=>a.random)),h=s.sub(e.dot(l)),m=h.clone();do{const t=e.dot(m),a=h.T.dot(h).entry(0,0)/m.T.dot(t).entry(0,0);l=l.add(m.mult(a));const i=h.sub(t.mult(a)),r=i.T.dot(i).entry(0,0)/h.T.dot(h).entry(0,0);m=i.add(m.mult(r)),h=i}while(Math.abs(h.mean)>i);n=n.concat(l,"horizontal")}return n}static solve(e,t){let{L:a,U:i}="L"in e&&"U"in e?e:S.LU(e),r=a.shape[0],s=t.clone();for(let e=0;e<r;++e){for(let t=0;t<e-1;++t)s.set_entry(0,e,s.entry(0,e)-a.entry(e,t)*s.entry(1,t));s.set_entry(0,e,s.entry(0,e)/a.entry(e,e))}for(let e=r-1;e>=0;--e){for(let t=r-1;t>e;--t)s.set_entry(0,e,s.entry(0,e)-i.entry(e,t)*s.entry(0,t));s.set_entry(0,e,s.entry(0,e)/i.entry(e,e))}return s}static LU(e){const t=e.shape[0],a=new S(t,t,"zeros"),i=new S(t,t,"identity");for(let r=0;r<t;++r){for(let s=r;s<t;++s){let t=0;for(let e=0;e<r;++e)t+=a.entry(s,e)*i.entry(e,r);a.set_entry(s,r,e.entry(s,r)-t)}for(let s=r;s<t;++s){if(0===a.entry(r,r))return;let t=0;for(let e=0;e<r;++e)t+=a.entry(r,e)*i.entry(e,s);i.set_entry(r,s,(e.entry(r,s)-t)/a.entry(r,r))}}return{L:a,U:i}}static SVD(e,t=2){const a=e.T;let i=a.dot(e),r=e.dot(a),{eigenvectors:s,eigenvalues:n}=simultaneous_poweriteration(i,t),{eigenvectors:o}=simultaneous_poweriteration(r,t);return{U:o,Sigma:n.map((e=>Math.sqrt(e))),V:s}}}function G(e,t,a=null){if(a||(a=Math.max(Math.round(t-e)+1,1)),a<2)return 1===a?[e]:[];let i=new Array(a);for(let r=a-=1;r>=0;--r)i[r]=(r*t+(a-r)*e)/a;return i}class z{constructor(e){return this._N=624,this._M=397,this._MATRIX_A=2567483615,this._UPPER_MASK=2147483648,this._LOWER_MASK=2147483647,this._mt=new Array(this._N),this._mti=this.N+1,this.seed=e||(new Date).getTime(),this}set seed(e){this._seed=e;let t=this._mt;for(t[0]=e>>>0,this._mti=1;this._mti<this._N;this._mti+=1){let e=this._mti,a=t[e-1]^t[e-1]>>>30;t[e]=(1812433253*((4294901760&a)>>>16)<<16)+1812433253*(65535&a)+e,t[e]>>>=0}}get seed(){return this._seed}get random(){return this.random_int*(1/4294967296)}get random_int(){let e,t=new Array(0,this._MATRIX_A);if(this._mti>=this._N){let a;this._mti==this._N+1&&(this.seed=5489);let i=this._N-this._M,r=this._M-this._N;for(a=0;a<i;++a)e=this._mt[a]&this._UPPER_MASK|this._mt[a+1]&this._LOWER_MASK,this._mt[a]=this._mt[a+this._M]^e>>>1^t[1&e];for(;a<this._N-1;++a)e=this._mt[a]&this._UPPER_MASK|this._mt[a+1]&this._LOWER_MASK,this._mt[a]=this._mt[a+r]^e>>>1^t[1&e];e=this._mt[this._N-1]&this._UPPER_MASK|this._mt[0]&this._LOWER_MASK,this._mt[this._N-1]=this._mt[this._M-1]^e>>>1^t[1&e],this._mti=0}return e=this._mt[this._mti+=1],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,e^=e>>>18,e>>>0}choice(e,t){if(e instanceof S){let[a,i]=e.shape;if(t>a)throw"n bigger than A!";let r=new Array(t),s=G(0,a-1);for(let e=0,a=s.length;e<t;++e,--a){let t=this.random_int%a;r[e]=s.splice(t,1)[0]}return r.map((t=>e.row(t)))}if(Array.isArray(e)||e instanceof Float64Array){let a=e.length;if(t>a)throw"n bigger than A!";let i=new Array(t),r=G(0,a-1);for(let e=0,a=r.length;e<t;++e,--a){let t=this.random_int%a;i[e]=r.splice(t,1)[0]}return i.map((t=>e[t]))}}static choice(e,t,a=19870307){let[i,r]=e.shape;if(t>i)throw"n bigger than A!";let s=new z(a),n=new Array(t),o=G(0,i-1);for(let e=0,a=o.length;e<t;++e,--a){let t=s.random_int%a;n[e]=o.splice(t,1)[0]}return n.map((t=>e.row(t)))}}
/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */function C(e){let t=e.length;for(;--t>=0;)e[t]=0}const M=256,R=286,L=30,O=15,F=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),N=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),U=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),H=new Array(576);C(H);const P=new Array(60);C(P);const W=new Array(512);C(W);const K=new Array(256);C(K);const Y=new Array(29);C(Y);const V=new Array(L);function j(e,t,a,i,r){this.static_tree=e,this.extra_bits=t,this.extra_base=a,this.elems=i,this.max_length=r,this.has_stree=e&&e.length}let $,X,q;function J(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}C(V);const Q=e=>e<256?W[e]:W[256+(e>>>7)],ee=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},te=(e,t,a)=>{e.bi_valid>16-a?(e.bi_buf|=t<<e.bi_valid&65535,ee(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=a-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=a)},ae=(e,t,a)=>{te(e,a[2*t],a[2*t+1])},ie=(e,t)=>{let a=0;do{a|=1&e,e>>>=1,a<<=1}while(--t>0);return a>>>1},re=(e,t,a)=>{const i=new Array(16);let r,s,n=0;for(r=1;r<=O;r++)i[r]=n=n+a[r-1]<<1;for(s=0;s<=t;s++){let t=e[2*s+1];0!==t&&(e[2*s]=ie(i[t]++,t))}},se=e=>{let t;for(t=0;t<R;t++)e.dyn_ltree[2*t]=0;for(t=0;t<L;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0},ne=e=>{e.bi_valid>8?ee(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},oe=(e,t,a,i)=>{const r=2*t,s=2*a;return e[r]<e[s]||e[r]===e[s]&&i[t]<=i[a]},le=(e,t,a)=>{const i=e.heap[a];let r=a<<1;for(;r<=e.heap_len&&(r<e.heap_len&&oe(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!oe(t,i,e.heap[r],e.depth));)e.heap[a]=e.heap[r],a=r,r<<=1;e.heap[a]=i},he=(e,t,a)=>{let i,r,s,n,o=0;if(0!==e.last_lit)do{i=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],r=e.pending_buf[e.l_buf+o],o++,0===i?ae(e,r,t):(s=K[r],ae(e,s+M+1,t),n=F[s],0!==n&&(r-=Y[s],te(e,r,n)),i--,s=Q(i),ae(e,s,a),n=N[s],0!==n&&(i-=V[s],te(e,i,n)))}while(o<e.last_lit);ae(e,256,t)},me=(e,t)=>{const a=t.dyn_tree,i=t.stat_desc.static_tree,r=t.stat_desc.has_stree,s=t.stat_desc.elems;let n,o,l,h=-1;for(e.heap_len=0,e.heap_max=573,n=0;n<s;n++)0!==a[2*n]?(e.heap[++e.heap_len]=h=n,e.depth[n]=0):a[2*n+1]=0;for(;e.heap_len<2;)l=e.heap[++e.heap_len]=h<2?++h:0,a[2*l]=1,e.depth[l]=0,e.opt_len--,r&&(e.static_len-=i[2*l+1]);for(t.max_code=h,n=e.heap_len>>1;n>=1;n--)le(e,a,n);l=s;do{n=e.heap[1],e.heap[1]=e.heap[e.heap_len--],le(e,a,1),o=e.heap[1],e.heap[--e.heap_max]=n,e.heap[--e.heap_max]=o,a[2*l]=a[2*n]+a[2*o],e.depth[l]=(e.depth[n]>=e.depth[o]?e.depth[n]:e.depth[o])+1,a[2*n+1]=a[2*o+1]=l,e.heap[1]=l++,le(e,a,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const a=t.dyn_tree,i=t.max_code,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,n=t.stat_desc.extra_bits,o=t.stat_desc.extra_base,l=t.stat_desc.max_length;let h,m,d,c,u,_,f=0;for(c=0;c<=O;c++)e.bl_count[c]=0;for(a[2*e.heap[e.heap_max]+1]=0,h=e.heap_max+1;h<573;h++)m=e.heap[h],c=a[2*a[2*m+1]+1]+1,c>l&&(c=l,f++),a[2*m+1]=c,m>i||(e.bl_count[c]++,u=0,m>=o&&(u=n[m-o]),_=a[2*m],e.opt_len+=_*(c+u),s&&(e.static_len+=_*(r[2*m+1]+u)));if(0!==f){do{for(c=l-1;0===e.bl_count[c];)c--;e.bl_count[c]--,e.bl_count[c+1]+=2,e.bl_count[l]--,f-=2}while(f>0);for(c=l;0!==c;c--)for(m=e.bl_count[c];0!==m;)d=e.heap[--h],d>i||(a[2*d+1]!==c&&(e.opt_len+=(c-a[2*d+1])*a[2*d],a[2*d+1]=c),m--)}})(e,t),re(a,h,e.bl_count)},de=(e,t,a)=>{let i,r,s=-1,n=t[1],o=0,l=7,h=4;for(0===n&&(l=138,h=3),t[2*(a+1)+1]=65535,i=0;i<=a;i++)r=n,n=t[2*(i+1)+1],++o<l&&r===n||(o<h?e.bl_tree[2*r]+=o:0!==r?(r!==s&&e.bl_tree[2*r]++,e.bl_tree[32]++):o<=10?e.bl_tree[34]++:e.bl_tree[36]++,o=0,s=r,0===n?(l=138,h=3):r===n?(l=6,h=3):(l=7,h=4))},ce=(e,t,a)=>{let i,r,s=-1,n=t[1],o=0,l=7,h=4;for(0===n&&(l=138,h=3),i=0;i<=a;i++)if(r=n,n=t[2*(i+1)+1],!(++o<l&&r===n)){if(o<h)do{ae(e,r,e.bl_tree)}while(0!=--o);else 0!==r?(r!==s&&(ae(e,r,e.bl_tree),o--),ae(e,16,e.bl_tree),te(e,o-3,2)):o<=10?(ae(e,17,e.bl_tree),te(e,o-3,3)):(ae(e,18,e.bl_tree),te(e,o-11,7));o=0,s=r,0===n?(l=138,h=3):r===n?(l=6,h=3):(l=7,h=4)}};let ue=!1;const _e=(e,t,a,i)=>{te(e,0+(i?1:0),3),((e,t,a,i)=>{ne(e),i&&(ee(e,a),ee(e,~a)),e.pending_buf.set(e.window.subarray(t,t+a),e.pending),e.pending+=a})(e,t,a,!0)};var fe=(e,t,a,i)=>{let r,s,n=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,a=4093624447;for(t=0;t<=31;t++,a>>>=1)if(1&a&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<M;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),me(e,e.l_desc),me(e,e.d_desc),n=(e=>{let t;for(de(e,e.dyn_ltree,e.l_desc.max_code),de(e,e.dyn_dtree,e.d_desc.max_code),me(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*Z[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,s=e.static_len+3+7>>>3,s<=r&&(r=s)):r=s=a+5,a+4<=r&&-1!==t?_e(e,t,a,i):4===e.strategy||s===r?(te(e,2+(i?1:0),3),he(e,H,P)):(te(e,4+(i?1:0),3),((e,t,a,i)=>{let r;for(te(e,t-257,5),te(e,a-1,5),te(e,i-4,4),r=0;r<i;r++)te(e,e.bl_tree[2*Z[r]+1],3);ce(e,e.dyn_ltree,t-1),ce(e,e.dyn_dtree,a-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,n+1),he(e,e.dyn_ltree,e.dyn_dtree)),se(e),i&&ne(e)},ge={_tr_init:e=>{ue||((()=>{let e,t,a,i,r;const s=new Array(16);for(a=0,i=0;i<28;i++)for(Y[i]=a,e=0;e<1<<F[i];e++)K[a++]=i;for(K[a-1]=i,r=0,i=0;i<16;i++)for(V[i]=r,e=0;e<1<<N[i];e++)W[r++]=i;for(r>>=7;i<L;i++)for(V[i]=r<<7,e=0;e<1<<N[i]-7;e++)W[256+r++]=i;for(t=0;t<=O;t++)s[t]=0;for(e=0;e<=143;)H[2*e+1]=8,e++,s[8]++;for(;e<=255;)H[2*e+1]=9,e++,s[9]++;for(;e<=279;)H[2*e+1]=7,e++,s[7]++;for(;e<=287;)H[2*e+1]=8,e++,s[8]++;for(re(H,287,s),e=0;e<L;e++)P[2*e+1]=5,P[2*e]=ie(e,5);$=new j(H,F,257,R,O),X=new j(P,N,0,L,O),q=new j(new Array(0),U,0,19,7)})(),ue=!0),e.l_desc=new J(e.dyn_ltree,$),e.d_desc=new J(e.dyn_dtree,X),e.bl_desc=new J(e.bl_tree,q),e.bi_buf=0,e.bi_valid=0,se(e)},_tr_stored_block:_e,_tr_flush_block:fe,_tr_tally:(e,t,a)=>(e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&a,e.last_lit++,0===t?e.dyn_ltree[2*a]++:(e.matches++,t--,e.dyn_ltree[2*(K[a]+M+1)]++,e.dyn_dtree[2*Q(t)]++),e.last_lit===e.lit_bufsize-1),_tr_align:e=>{te(e,2,3),ae(e,256,H),(e=>{16===e.bi_valid?(ee(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var pe=(e,t,a,i)=>{let r=65535&e|0,s=e>>>16&65535|0,n=0;for(;0!==a;){n=a>2e3?2e3:a,a-=n;do{r=r+t[i++]|0,s=s+r|0}while(--n);r%=65521,s%=65521}return r|s<<16|0};const we=new Uint32Array((()=>{let e,t=[];for(var a=0;a<256;a++){e=a;for(var i=0;i<8;i++)e=1&e?3988292384^e>>>1:e>>>1;t[a]=e}return t})());var ve=(e,t,a,i)=>{const r=we,s=i+a;e^=-1;for(let a=i;a<s;a++)e=e>>>8^r[255&(e^t[a])];return-1^e},be={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},ye={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:Ae,_tr_stored_block:Ie,_tr_flush_block:ke,_tr_tally:Be,_tr_align:xe}=ge,{Z_NO_FLUSH:De,Z_PARTIAL_FLUSH:Te,Z_FULL_FLUSH:Ee,Z_FINISH:Se,Z_BLOCK:Ge,Z_OK:ze,Z_STREAM_END:Ce,Z_STREAM_ERROR:Me,Z_DATA_ERROR:Re,Z_BUF_ERROR:Le,Z_DEFAULT_COMPRESSION:Oe,Z_FILTERED:Fe,Z_HUFFMAN_ONLY:Ne,Z_RLE:Ue,Z_FIXED:Ze,Z_DEFAULT_STRATEGY:He,Z_UNKNOWN:Pe,Z_DEFLATED:We}=ye,Ke=258,Ye=262,Ve=103,je=113,$e=666,Xe=(e,t)=>(e.msg=be[t],t),qe=e=>(e<<1)-(e>4?9:0),Je=e=>{let t=e.length;for(;--t>=0;)e[t]=0};let Qe=(e,t,a)=>(t<<e.hash_shift^a)&e.hash_mask;const et=e=>{const t=e.state;let a=t.pending;a>e.avail_out&&(a=e.avail_out),0!==a&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+a),e.next_out),e.next_out+=a,t.pending_out+=a,e.total_out+=a,e.avail_out-=a,t.pending-=a,0===t.pending&&(t.pending_out=0))},tt=(e,t)=>{ke(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,et(e.strm)},at=(e,t)=>{e.pending_buf[e.pending++]=t},it=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},rt=(e,t,a,i)=>{let r=e.avail_in;return r>i&&(r=i),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),a),1===e.state.wrap?e.adler=pe(e.adler,t,r,a):2===e.state.wrap&&(e.adler=ve(e.adler,t,r,a)),e.next_in+=r,e.total_in+=r,r)},st=(e,t)=>{let a,i,r=e.max_chain_length,s=e.strstart,n=e.prev_length,o=e.nice_match;const l=e.strstart>e.w_size-Ye?e.strstart-(e.w_size-Ye):0,h=e.window,m=e.w_mask,d=e.prev,c=e.strstart+Ke;let u=h[s+n-1],_=h[s+n];e.prev_length>=e.good_match&&(r>>=2),o>e.lookahead&&(o=e.lookahead);do{if(a=t,h[a+n]===_&&h[a+n-1]===u&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<c);if(i=Ke-(c-s),s=c-Ke,i>n){if(e.match_start=t,n=i,i>=o)break;u=h[s+n-1],_=h[s+n]}}}while((t=d[t&m])>l&&0!=--r);return n<=e.lookahead?n:e.lookahead},nt=e=>{const t=e.w_size;let a,i,r,s,n;do{if(s=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Ye)){e.window.set(e.window.subarray(t,t+t),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,i=e.hash_size,a=i;do{r=e.head[--a],e.head[a]=r>=t?r-t:0}while(--i);i=t,a=i;do{r=e.prev[--a],e.prev[a]=r>=t?r-t:0}while(--i);s+=t}if(0===e.strm.avail_in)break;if(i=rt(e.strm,e.window,e.strstart+e.lookahead,s),e.lookahead+=i,e.lookahead+e.insert>=3)for(n=e.strstart-e.insert,e.ins_h=e.window[n],e.ins_h=Qe(e,e.ins_h,e.window[n+1]);e.insert&&(e.ins_h=Qe(e,e.ins_h,e.window[n+3-1]),e.prev[n&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=n,n++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<Ye&&0!==e.strm.avail_in)},ot=(e,t)=>{let a,i;for(;;){if(e.lookahead<Ye){if(nt(e),e.lookahead<Ye&&t===De)return 1;if(0===e.lookahead)break}if(a=0,e.lookahead>=3&&(e.ins_h=Qe(e,e.ins_h,e.window[e.strstart+3-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==a&&e.strstart-a<=e.w_size-Ye&&(e.match_length=st(e,a)),e.match_length>=3)if(i=Be(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=Qe(e,e.ins_h,e.window[e.strstart+3-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=Qe(e,e.ins_h,e.window[e.strstart+1]);else i=Be(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(i&&(tt(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===Se?(tt(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(tt(e,!1),0===e.strm.avail_out)?1:2},lt=(e,t)=>{let a,i,r;for(;;){if(e.lookahead<Ye){if(nt(e),e.lookahead<Ye&&t===De)return 1;if(0===e.lookahead)break}if(a=0,e.lookahead>=3&&(e.ins_h=Qe(e,e.ins_h,e.window[e.strstart+3-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==a&&e.prev_length<e.max_lazy_match&&e.strstart-a<=e.w_size-Ye&&(e.match_length=st(e,a),e.match_length<=5&&(e.strategy===Fe||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,i=Be(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=Qe(e,e.ins_h,e.window[e.strstart+3-1]),a=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,i&&(tt(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(i=Be(e,0,e.window[e.strstart-1]),i&&tt(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(i=Be(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===Se?(tt(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(tt(e,!1),0===e.strm.avail_out)?1:2};function ht(e,t,a,i,r){this.good_length=e,this.max_lazy=t,this.nice_length=a,this.max_chain=i,this.func=r}const mt=[new ht(0,0,0,0,((e,t)=>{let a=65535;for(a>e.pending_buf_size-5&&(a=e.pending_buf_size-5);;){if(e.lookahead<=1){if(nt(e),0===e.lookahead&&t===De)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;const i=e.block_start+a;if((0===e.strstart||e.strstart>=i)&&(e.lookahead=e.strstart-i,e.strstart=i,tt(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-Ye&&(tt(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Se?(tt(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(tt(e,!1),e.strm.avail_out),1)})),new ht(4,4,8,4,ot),new ht(4,5,16,8,ot),new ht(4,6,32,32,ot),new ht(4,4,16,16,lt),new ht(8,16,32,32,lt),new ht(8,16,128,128,lt),new ht(8,32,128,256,lt),new ht(32,128,258,1024,lt),new ht(32,258,258,4096,lt)];function dt(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=We,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),Je(this.dyn_ltree),Je(this.dyn_dtree),Je(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),Je(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),Je(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const ct=e=>{if(!e||!e.state)return Xe(e,Me);e.total_in=e.total_out=0,e.data_type=Pe;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:je,e.adler=2===t.wrap?0:1,t.last_flush=De,Ae(t),ze},ut=e=>{const t=ct(e);var a;return t===ze&&((a=e.state).window_size=2*a.w_size,Je(a.head),a.max_lazy_match=mt[a.level].max_lazy,a.good_match=mt[a.level].good_length,a.nice_match=mt[a.level].nice_length,a.max_chain_length=mt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),t},_t=(e,t,a,i,r,s)=>{if(!e)return Me;let n=1;if(t===Oe&&(t=6),i<0?(n=0,i=-i):i>15&&(n=2,i-=16),r<1||r>9||a!==We||i<8||i>15||t<0||t>9||s<0||s>Ze)return Xe(e,Me);8===i&&(i=9);const o=new dt;return e.state=o,o.strm=e,o.wrap=n,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=r+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<r+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=a,ut(e)};var ft={deflateInit:(e,t)=>_t(e,t,We,15,8,He),deflateInit2:_t,deflateReset:ut,deflateResetKeep:ct,deflateSetHeader:(e,t)=>e&&e.state?2!==e.state.wrap?Me:(e.state.gzhead=t,ze):Me,deflate:(e,t)=>{let a,i;if(!e||!e.state||t>Ge||t<0)return e?Xe(e,Me):Me;const r=e.state;if(!e.output||!e.input&&0!==e.avail_in||r.status===$e&&t!==Se)return Xe(e,0===e.avail_out?Le:Me);r.strm=e;const s=r.last_flush;if(r.last_flush=t,42===r.status)if(2===r.wrap)e.adler=0,at(r,31),at(r,139),at(r,8),r.gzhead?(at(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),at(r,255&r.gzhead.time),at(r,r.gzhead.time>>8&255),at(r,r.gzhead.time>>16&255),at(r,r.gzhead.time>>24&255),at(r,9===r.level?2:r.strategy>=Ne||r.level<2?4:0),at(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(at(r,255&r.gzhead.extra.length),at(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=ve(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(at(r,0),at(r,0),at(r,0),at(r,0),at(r,0),at(r,9===r.level?2:r.strategy>=Ne||r.level<2?4:0),at(r,3),r.status=je);else{let t=We+(r.w_bits-8<<4)<<8,a=-1;a=r.strategy>=Ne||r.level<2?0:r.level<6?1:6===r.level?2:3,t|=a<<6,0!==r.strstart&&(t|=32),t+=31-t%31,r.status=je,it(r,t),0!==r.strstart&&(it(r,e.adler>>>16),it(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(a=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>a&&(e.adler=ve(e.adler,r.pending_buf,r.pending-a,a)),et(e),a=r.pending,r.pending!==r.pending_buf_size));)at(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>a&&(e.adler=ve(e.adler,r.pending_buf,r.pending-a,a)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=ve(e.adler,r.pending_buf,r.pending-a,a)),et(e),a=r.pending,r.pending===r.pending_buf_size)){i=1;break}i=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,at(r,i)}while(0!==i);r.gzhead.hcrc&&r.pending>a&&(e.adler=ve(e.adler,r.pending_buf,r.pending-a,a)),0===i&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=ve(e.adler,r.pending_buf,r.pending-a,a)),et(e),a=r.pending,r.pending===r.pending_buf_size)){i=1;break}i=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,at(r,i)}while(0!==i);r.gzhead.hcrc&&r.pending>a&&(e.adler=ve(e.adler,r.pending_buf,r.pending-a,a)),0===i&&(r.status=Ve)}else r.status=Ve;if(r.status===Ve&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&et(e),r.pending+2<=r.pending_buf_size&&(at(r,255&e.adler),at(r,e.adler>>8&255),e.adler=0,r.status=je)):r.status=je),0!==r.pending){if(et(e),0===e.avail_out)return r.last_flush=-1,ze}else if(0===e.avail_in&&qe(t)<=qe(s)&&t!==Se)return Xe(e,Le);if(r.status===$e&&0!==e.avail_in)return Xe(e,Le);if(0!==e.avail_in||0!==r.lookahead||t!==De&&r.status!==$e){let a=r.strategy===Ne?((e,t)=>{let a;for(;;){if(0===e.lookahead&&(nt(e),0===e.lookahead)){if(t===De)return 1;break}if(e.match_length=0,a=Be(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,a&&(tt(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Se?(tt(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(tt(e,!1),0===e.strm.avail_out)?1:2})(r,t):r.strategy===Ue?((e,t)=>{let a,i,r,s;const n=e.window;for(;;){if(e.lookahead<=Ke){if(nt(e),e.lookahead<=Ke&&t===De)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,i=n[r],i===n[++r]&&i===n[++r]&&i===n[++r])){s=e.strstart+Ke;do{}while(i===n[++r]&&i===n[++r]&&i===n[++r]&&i===n[++r]&&i===n[++r]&&i===n[++r]&&i===n[++r]&&i===n[++r]&&r<s);e.match_length=Ke-(s-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(a=Be(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(a=Be(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),a&&(tt(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Se?(tt(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(tt(e,!1),0===e.strm.avail_out)?1:2})(r,t):mt[r.level].func(r,t);if(3!==a&&4!==a||(r.status=$e),1===a||3===a)return 0===e.avail_out&&(r.last_flush=-1),ze;if(2===a&&(t===Te?xe(r):t!==Ge&&(Ie(r,0,0,!1),t===Ee&&(Je(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),et(e),0===e.avail_out))return r.last_flush=-1,ze}return t!==Se?ze:r.wrap<=0?Ce:(2===r.wrap?(at(r,255&e.adler),at(r,e.adler>>8&255),at(r,e.adler>>16&255),at(r,e.adler>>24&255),at(r,255&e.total_in),at(r,e.total_in>>8&255),at(r,e.total_in>>16&255),at(r,e.total_in>>24&255)):(it(r,e.adler>>>16),it(r,65535&e.adler)),et(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?ze:Ce)},deflateEnd:e=>{if(!e||!e.state)return Me;const t=e.state.status;return 42!==t&&69!==t&&73!==t&&91!==t&&t!==Ve&&t!==je&&t!==$e?Xe(e,Me):(e.state=null,t===je?Xe(e,Re):ze)},deflateSetDictionary:(e,t)=>{let a=t.length;if(!e||!e.state)return Me;const i=e.state,r=i.wrap;if(2===r||1===r&&42!==i.status||i.lookahead)return Me;if(1===r&&(e.adler=pe(e.adler,t,a,0)),i.wrap=0,a>=i.w_size){0===r&&(Je(i.head),i.strstart=0,i.block_start=0,i.insert=0);let e=new Uint8Array(i.w_size);e.set(t.subarray(a-i.w_size,a),0),t=e,a=i.w_size}const s=e.avail_in,n=e.next_in,o=e.input;for(e.avail_in=a,e.next_in=0,e.input=t,nt(i);i.lookahead>=3;){let e=i.strstart,t=i.lookahead-2;do{i.ins_h=Qe(i,i.ins_h,i.window[e+3-1]),i.prev[e&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=e,e++}while(--t);i.strstart=e,i.lookahead=2,nt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,e.next_in=n,e.input=o,e.avail_in=s,i.wrap=r,ze},deflateInfo:"pako deflate (from Nodeca project)"};const gt=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var pt=function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const a=t.shift();if(a){if("object"!=typeof a)throw new TypeError(a+"must be non-object");for(const t in a)gt(a,t)&&(e[t]=a[t])}}return e},wt=e=>{let t=0;for(let a=0,i=e.length;a<i;a++)t+=e[a].length;const a=new Uint8Array(t);for(let t=0,i=0,r=e.length;t<r;t++){let r=e[t];a.set(r,i),i+=r.length}return a};let vt=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){vt=!1}const bt=new Uint8Array(256);for(let e=0;e<256;e++)bt[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;bt[254]=bt[254]=1;var yt=e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,a,i,r,s,n=e.length,o=0;for(r=0;r<n;r++)a=e.charCodeAt(r),55296==(64512&a)&&r+1<n&&(i=e.charCodeAt(r+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),r++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(t=new Uint8Array(o),s=0,r=0;s<o;r++)a=e.charCodeAt(r),55296==(64512&a)&&r+1<n&&(i=e.charCodeAt(r+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),r++)),a<128?t[s++]=a:a<2048?(t[s++]=192|a>>>6,t[s++]=128|63&a):a<65536?(t[s++]=224|a>>>12,t[s++]=128|a>>>6&63,t[s++]=128|63&a):(t[s++]=240|a>>>18,t[s++]=128|a>>>12&63,t[s++]=128|a>>>6&63,t[s++]=128|63&a);return t},At=(e,t)=>{const a=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let i,r;const s=new Array(2*a);for(r=0,i=0;i<a;){let t=e[i++];if(t<128){s[r++]=t;continue}let n=bt[t];if(n>4)s[r++]=65533,i+=n-1;else{for(t&=2===n?31:3===n?15:7;n>1&&i<a;)t=t<<6|63&e[i++],n--;n>1?s[r++]=65533:t<65536?s[r++]=t:(t-=65536,s[r++]=55296|t>>10&1023,s[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&vt)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let a="";for(let i=0;i<t;i++)a+=String.fromCharCode(e[i]);return a})(s,r)},It=(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let a=t-1;for(;a>=0&&128==(192&e[a]);)a--;return a<0||0===a?t:a+bt[e[a]]>t?a:t};var kt=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Bt=Object.prototype.toString,{Z_NO_FLUSH:xt,Z_SYNC_FLUSH:Dt,Z_FULL_FLUSH:Tt,Z_FINISH:Et,Z_OK:St,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:zt,Z_DEFAULT_STRATEGY:Ct,Z_DEFLATED:Mt}=ye;function Rt(e){this.options=pt({level:zt,method:Mt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Ct},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new kt,this.strm.avail_out=0;let a=ft.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(a!==St)throw new Error(be[a]);if(t.header&&ft.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?yt(t.dictionary):"[object ArrayBuffer]"===Bt.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,a=ft.deflateSetDictionary(this.strm,e),a!==St)throw new Error(be[a]);this._dict_set=!0}}function Lt(e,t){const a=new Rt(t);if(a.push(e,!0),a.err)throw a.msg||be[a.err];return a.result}Rt.prototype.push=function(e,t){const a=this.strm,i=this.options.chunkSize;let r,s;if(this.ended)return!1;for(s=t===~~t?t:!0===t?Et:xt,"string"==typeof e?a.input=yt(e):"[object ArrayBuffer]"===Bt.call(e)?a.input=new Uint8Array(e):a.input=e,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===Dt||s===Tt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(r=ft.deflate(a,s),r===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),r=ft.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===St;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Rt.prototype.onData=function(e){this.chunks.push(e)},Rt.prototype.onEnd=function(e){e===St&&(this.result=wt(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Ot={Deflate:Rt,deflate:Lt,deflateRaw:function(e,t){return(t=t||{}).raw=!0,Lt(e,t)},gzip:function(e,t){return(t=t||{}).gzip=!0,Lt(e,t)},constants:ye};var Ft=function(e,t){let a,i,r,s,n,o,l,h,m,d,c,u,_,f,g,p,w,v,b,y,A,I,k,B;const x=e.state;a=e.next_in,k=e.input,i=a+(e.avail_in-5),r=e.next_out,B=e.output,s=r-(t-e.avail_out),n=r+(e.avail_out-257),o=x.dmax,l=x.wsize,h=x.whave,m=x.wnext,d=x.window,c=x.hold,u=x.bits,_=x.lencode,f=x.distcode,g=(1<<x.lenbits)-1,p=(1<<x.distbits)-1;e:do{u<15&&(c+=k[a++]<<u,u+=8,c+=k[a++]<<u,u+=8),w=_[c&g];t:for(;;){if(v=w>>>24,c>>>=v,u-=v,v=w>>>16&255,0===v)B[r++]=65535&w;else{if(!(16&v)){if(0==(64&v)){w=_[(65535&w)+(c&(1<<v)-1)];continue t}if(32&v){x.mode=12;break e}e.msg="invalid literal/length code",x.mode=30;break e}b=65535&w,v&=15,v&&(u<v&&(c+=k[a++]<<u,u+=8),b+=c&(1<<v)-1,c>>>=v,u-=v),u<15&&(c+=k[a++]<<u,u+=8,c+=k[a++]<<u,u+=8),w=f[c&p];a:for(;;){if(v=w>>>24,c>>>=v,u-=v,v=w>>>16&255,!(16&v)){if(0==(64&v)){w=f[(65535&w)+(c&(1<<v)-1)];continue a}e.msg="invalid distance code",x.mode=30;break e}if(y=65535&w,v&=15,u<v&&(c+=k[a++]<<u,u+=8,u<v&&(c+=k[a++]<<u,u+=8)),y+=c&(1<<v)-1,y>o){e.msg="invalid distance too far back",x.mode=30;break e}if(c>>>=v,u-=v,v=r-s,y>v){if(v=y-v,v>h&&x.sane){e.msg="invalid distance too far back",x.mode=30;break e}if(A=0,I=d,0===m){if(A+=l-v,v<b){b-=v;do{B[r++]=d[A++]}while(--v);A=r-y,I=B}}else if(m<v){if(A+=l+m-v,v-=m,v<b){b-=v;do{B[r++]=d[A++]}while(--v);if(A=0,m<b){v=m,b-=v;do{B[r++]=d[A++]}while(--v);A=r-y,I=B}}}else if(A+=m-v,v<b){b-=v;do{B[r++]=d[A++]}while(--v);A=r-y,I=B}for(;b>2;)B[r++]=I[A++],B[r++]=I[A++],B[r++]=I[A++],b-=3;b&&(B[r++]=I[A++],b>1&&(B[r++]=I[A++]))}else{A=r-y;do{B[r++]=B[A++],B[r++]=B[A++],B[r++]=B[A++],b-=3}while(b>2);b&&(B[r++]=B[A++],b>1&&(B[r++]=B[A++]))}break}}break}}while(a<i&&r<n);b=u>>3,a-=b,u-=b<<3,c&=(1<<u)-1,e.next_in=a,e.next_out=r,e.avail_in=a<i?i-a+5:5-(a-i),e.avail_out=r<n?n-r+257:257-(r-n),x.hold=c,x.bits=u};const Nt=15,Ut=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),Zt=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),Ht=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Pt=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var Wt=(e,t,a,i,r,s,n,o)=>{const l=o.bits;let h,m,d,c,u,_,f=0,g=0,p=0,w=0,v=0,b=0,y=0,A=0,I=0,k=0,B=null,x=0;const D=new Uint16Array(16),T=new Uint16Array(16);let E,S,G,z=null,C=0;for(f=0;f<=Nt;f++)D[f]=0;for(g=0;g<i;g++)D[t[a+g]]++;for(v=l,w=Nt;w>=1&&0===D[w];w--);if(v>w&&(v=w),0===w)return r[s++]=20971520,r[s++]=20971520,o.bits=1,0;for(p=1;p<w&&0===D[p];p++);for(v<p&&(v=p),A=1,f=1;f<=Nt;f++)if(A<<=1,A-=D[f],A<0)return-1;if(A>0&&(0===e||1!==w))return-1;for(T[1]=0,f=1;f<Nt;f++)T[f+1]=T[f]+D[f];for(g=0;g<i;g++)0!==t[a+g]&&(n[T[t[a+g]]++]=g);if(0===e?(B=z=n,_=19):1===e?(B=Ut,x-=257,z=Zt,C-=257,_=256):(B=Ht,z=Pt,_=-1),k=0,g=0,f=p,u=s,b=v,y=0,d=-1,I=1<<v,c=I-1,1===e&&I>852||2===e&&I>592)return 1;for(;;){E=f-y,n[g]<_?(S=0,G=n[g]):n[g]>_?(S=z[C+n[g]],G=B[x+n[g]]):(S=96,G=0),h=1<<f-y,m=1<<b,p=m;do{m-=h,r[u+(k>>y)+m]=E<<24|S<<16|G|0}while(0!==m);for(h=1<<f-1;k&h;)h>>=1;if(0!==h?(k&=h-1,k+=h):k=0,g++,0==--D[f]){if(f===w)break;f=t[a+n[g]]}if(f>v&&(k&c)!==d){for(0===y&&(y=v),u+=p,b=f-y,A=1<<b;b+y<w&&(A-=D[b+y],!(A<=0));)b++,A<<=1;if(I+=1<<b,1===e&&I>852||2===e&&I>592)return 1;d=k&c,r[d]=v<<24|b<<16|u-s|0}}return 0!==k&&(r[u+k]=f-y<<24|64<<16|0),o.bits=v,0};const{Z_FINISH:Kt,Z_BLOCK:Yt,Z_TREES:Vt,Z_OK:jt,Z_STREAM_END:$t,Z_NEED_DICT:Xt,Z_STREAM_ERROR:qt,Z_DATA_ERROR:Jt,Z_MEM_ERROR:Qt,Z_BUF_ERROR:ea,Z_DEFLATED:ta}=ye,aa=12,ia=30,ra=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function sa(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const na=e=>{if(!e||!e.state)return qt;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,jt},oa=e=>{if(!e||!e.state)return qt;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,na(e)},la=(e,t)=>{let a;if(!e||!e.state)return qt;const i=e.state;return t<0?(a=0,t=-t):(a=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?qt:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=a,i.wbits=t,oa(e))},ha=(e,t)=>{if(!e)return qt;const a=new sa;e.state=a,a.window=null;const i=la(e,t);return i!==jt&&(e.state=null),i};let ma,da,ca=!0;const ua=e=>{if(ca){ma=new Int32Array(512),da=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Wt(1,e.lens,0,288,ma,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Wt(2,e.lens,0,32,da,0,e.work,{bits:5}),ca=!1}e.lencode=ma,e.lenbits=9,e.distcode=da,e.distbits=5},_a=(e,t,a,i)=>{let r;const s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(t.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(r=s.wsize-s.wnext,r>i&&(r=i),s.window.set(t.subarray(a-i,a-i+r),s.wnext),(i-=r)?(s.window.set(t.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=r,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=r))),0};var fa={inflateReset:oa,inflateReset2:la,inflateResetKeep:na,inflateInit:e=>ha(e,15),inflateInit2:ha,inflate:(e,t)=>{let a,i,r,s,n,o,l,h,m,d,c,u,_,f,g,p,w,v,b,y,A,I,k=0;const B=new Uint8Array(4);let x,D;const T=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return qt;a=e.state,a.mode===aa&&(a.mode=13),n=e.next_out,r=e.output,l=e.avail_out,s=e.next_in,i=e.input,o=e.avail_in,h=a.hold,m=a.bits,d=o,c=l,I=jt;e:for(;;)switch(a.mode){case 1:if(0===a.wrap){a.mode=13;break}for(;m<16;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(2&a.wrap&&35615===h){a.check=0,B[0]=255&h,B[1]=h>>>8&255,a.check=ve(a.check,B,2,0),h=0,m=0,a.mode=2;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){e.msg="incorrect header check",a.mode=ia;break}if((15&h)!==ta){e.msg="unknown compression method",a.mode=ia;break}if(h>>>=4,m-=4,A=8+(15&h),0===a.wbits)a.wbits=A;else if(A>a.wbits){e.msg="invalid window size",a.mode=ia;break}a.dmax=1<<a.wbits,e.adler=a.check=1,a.mode=512&h?10:aa,h=0,m=0;break;case 2:for(;m<16;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(a.flags=h,(255&a.flags)!==ta){e.msg="unknown compression method",a.mode=ia;break}if(57344&a.flags){e.msg="unknown header flags set",a.mode=ia;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&(B[0]=255&h,B[1]=h>>>8&255,a.check=ve(a.check,B,2,0)),h=0,m=0,a.mode=3;case 3:for(;m<32;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}a.head&&(a.head.time=h),512&a.flags&&(B[0]=255&h,B[1]=h>>>8&255,B[2]=h>>>16&255,B[3]=h>>>24&255,a.check=ve(a.check,B,4,0)),h=0,m=0,a.mode=4;case 4:for(;m<16;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&(B[0]=255&h,B[1]=h>>>8&255,a.check=ve(a.check,B,2,0)),h=0,m=0,a.mode=5;case 5:if(1024&a.flags){for(;m<16;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&(B[0]=255&h,B[1]=h>>>8&255,a.check=ve(a.check,B,2,0)),h=0,m=0}else a.head&&(a.head.extra=null);a.mode=6;case 6:if(1024&a.flags&&(u=a.length,u>o&&(u=o),u&&(a.head&&(A=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+u),A)),512&a.flags&&(a.check=ve(a.check,i,u,s)),o-=u,s+=u,a.length-=u),a.length))break e;a.length=0,a.mode=7;case 7:if(2048&a.flags){if(0===o)break e;u=0;do{A=i[s+u++],a.head&&A&&a.length<65536&&(a.head.name+=String.fromCharCode(A))}while(A&&u<o);if(512&a.flags&&(a.check=ve(a.check,i,u,s)),o-=u,s+=u,A)break e}else a.head&&(a.head.name=null);a.length=0,a.mode=8;case 8:if(4096&a.flags){if(0===o)break e;u=0;do{A=i[s+u++],a.head&&A&&a.length<65536&&(a.head.comment+=String.fromCharCode(A))}while(A&&u<o);if(512&a.flags&&(a.check=ve(a.check,i,u,s)),o-=u,s+=u,A)break e}else a.head&&(a.head.comment=null);a.mode=9;case 9:if(512&a.flags){for(;m<16;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(h!==(65535&a.check)){e.msg="header crc mismatch",a.mode=ia;break}h=0,m=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),e.adler=a.check=0,a.mode=aa;break;case 10:for(;m<32;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}e.adler=a.check=ra(h),h=0,m=0,a.mode=11;case 11:if(0===a.havedict)return e.next_out=n,e.avail_out=l,e.next_in=s,e.avail_in=o,a.hold=h,a.bits=m,Xt;e.adler=a.check=1,a.mode=aa;case aa:if(t===Yt||t===Vt)break e;case 13:if(a.last){h>>>=7&m,m-=7&m,a.mode=27;break}for(;m<3;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}switch(a.last=1&h,h>>>=1,m-=1,3&h){case 0:a.mode=14;break;case 1:if(ua(a),a.mode=20,t===Vt){h>>>=2,m-=2;break e}break;case 2:a.mode=17;break;case 3:e.msg="invalid block type",a.mode=ia}h>>>=2,m-=2;break;case 14:for(h>>>=7&m,m-=7&m;m<32;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if((65535&h)!=(h>>>16^65535)){e.msg="invalid stored block lengths",a.mode=ia;break}if(a.length=65535&h,h=0,m=0,a.mode=15,t===Vt)break e;case 15:a.mode=16;case 16:if(u=a.length,u){if(u>o&&(u=o),u>l&&(u=l),0===u)break e;r.set(i.subarray(s,s+u),n),o-=u,s+=u,l-=u,n+=u,a.length-=u;break}a.mode=aa;break;case 17:for(;m<14;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(a.nlen=257+(31&h),h>>>=5,m-=5,a.ndist=1+(31&h),h>>>=5,m-=5,a.ncode=4+(15&h),h>>>=4,m-=4,a.nlen>286||a.ndist>30){e.msg="too many length or distance symbols",a.mode=ia;break}a.have=0,a.mode=18;case 18:for(;a.have<a.ncode;){for(;m<3;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}a.lens[T[a.have++]]=7&h,h>>>=3,m-=3}for(;a.have<19;)a.lens[T[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,x={bits:a.lenbits},I=Wt(0,a.lens,0,19,a.lencode,0,a.work,x),a.lenbits=x.bits,I){e.msg="invalid code lengths set",a.mode=ia;break}a.have=0,a.mode=19;case 19:for(;a.have<a.nlen+a.ndist;){for(;k=a.lencode[h&(1<<a.lenbits)-1],g=k>>>24,p=k>>>16&255,w=65535&k,!(g<=m);){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(w<16)h>>>=g,m-=g,a.lens[a.have++]=w;else{if(16===w){for(D=g+2;m<D;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(h>>>=g,m-=g,0===a.have){e.msg="invalid bit length repeat",a.mode=ia;break}A=a.lens[a.have-1],u=3+(3&h),h>>>=2,m-=2}else if(17===w){for(D=g+3;m<D;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}h>>>=g,m-=g,A=0,u=3+(7&h),h>>>=3,m-=3}else{for(D=g+7;m<D;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}h>>>=g,m-=g,A=0,u=11+(127&h),h>>>=7,m-=7}if(a.have+u>a.nlen+a.ndist){e.msg="invalid bit length repeat",a.mode=ia;break}for(;u--;)a.lens[a.have++]=A}}if(a.mode===ia)break;if(0===a.lens[256]){e.msg="invalid code -- missing end-of-block",a.mode=ia;break}if(a.lenbits=9,x={bits:a.lenbits},I=Wt(1,a.lens,0,a.nlen,a.lencode,0,a.work,x),a.lenbits=x.bits,I){e.msg="invalid literal/lengths set",a.mode=ia;break}if(a.distbits=6,a.distcode=a.distdyn,x={bits:a.distbits},I=Wt(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,x),a.distbits=x.bits,I){e.msg="invalid distances set",a.mode=ia;break}if(a.mode=20,t===Vt)break e;case 20:a.mode=21;case 21:if(o>=6&&l>=258){e.next_out=n,e.avail_out=l,e.next_in=s,e.avail_in=o,a.hold=h,a.bits=m,Ft(e,c),n=e.next_out,r=e.output,l=e.avail_out,s=e.next_in,i=e.input,o=e.avail_in,h=a.hold,m=a.bits,a.mode===aa&&(a.back=-1);break}for(a.back=0;k=a.lencode[h&(1<<a.lenbits)-1],g=k>>>24,p=k>>>16&255,w=65535&k,!(g<=m);){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(p&&0==(240&p)){for(v=g,b=p,y=w;k=a.lencode[y+((h&(1<<v+b)-1)>>v)],g=k>>>24,p=k>>>16&255,w=65535&k,!(v+g<=m);){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}h>>>=v,m-=v,a.back+=v}if(h>>>=g,m-=g,a.back+=g,a.length=w,0===p){a.mode=26;break}if(32&p){a.back=-1,a.mode=aa;break}if(64&p){e.msg="invalid literal/length code",a.mode=ia;break}a.extra=15&p,a.mode=22;case 22:if(a.extra){for(D=a.extra;m<D;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,m-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=23;case 23:for(;k=a.distcode[h&(1<<a.distbits)-1],g=k>>>24,p=k>>>16&255,w=65535&k,!(g<=m);){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(0==(240&p)){for(v=g,b=p,y=w;k=a.distcode[y+((h&(1<<v+b)-1)>>v)],g=k>>>24,p=k>>>16&255,w=65535&k,!(v+g<=m);){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}h>>>=v,m-=v,a.back+=v}if(h>>>=g,m-=g,a.back+=g,64&p){e.msg="invalid distance code",a.mode=ia;break}a.offset=w,a.extra=15&p,a.mode=24;case 24:if(a.extra){for(D=a.extra;m<D;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,m-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg="invalid distance too far back",a.mode=ia;break}a.mode=25;case 25:if(0===l)break e;if(u=c-l,a.offset>u){if(u=a.offset-u,u>a.whave&&a.sane){e.msg="invalid distance too far back",a.mode=ia;break}u>a.wnext?(u-=a.wnext,_=a.wsize-u):_=a.wnext-u,u>a.length&&(u=a.length),f=a.window}else f=r,_=n-a.offset,u=a.length;u>l&&(u=l),l-=u,a.length-=u;do{r[n++]=f[_++]}while(--u);0===a.length&&(a.mode=21);break;case 26:if(0===l)break e;r[n++]=a.length,l--,a.mode=21;break;case 27:if(a.wrap){for(;m<32;){if(0===o)break e;o--,h|=i[s++]<<m,m+=8}if(c-=l,e.total_out+=c,a.total+=c,c&&(e.adler=a.check=a.flags?ve(a.check,r,c,n-c):pe(a.check,r,c,n-c)),c=l,(a.flags?h:ra(h))!==a.check){e.msg="incorrect data check",a.mode=ia;break}h=0,m=0}a.mode=28;case 28:if(a.wrap&&a.flags){for(;m<32;){if(0===o)break e;o--,h+=i[s++]<<m,m+=8}if(h!==(4294967295&a.total)){e.msg="incorrect length check",a.mode=ia;break}h=0,m=0}a.mode=29;case 29:I=$t;break e;case ia:I=Jt;break e;case 31:return Qt;default:return qt}return e.next_out=n,e.avail_out=l,e.next_in=s,e.avail_in=o,a.hold=h,a.bits=m,(a.wsize||c!==e.avail_out&&a.mode<ia&&(a.mode<27||t!==Kt))&&_a(e,e.output,e.next_out,c-e.avail_out),d-=e.avail_in,c-=e.avail_out,e.total_in+=d,e.total_out+=c,a.total+=c,a.wrap&&c&&(e.adler=a.check=a.flags?ve(a.check,r,c,e.next_out-c):pe(a.check,r,c,e.next_out-c)),e.data_type=a.bits+(a.last?64:0)+(a.mode===aa?128:0)+(20===a.mode||15===a.mode?256:0),(0===d&&0===c||t===Kt)&&I===jt&&(I=ea),I},inflateEnd:e=>{if(!e||!e.state)return qt;let t=e.state;return t.window&&(t.window=null),e.state=null,jt},inflateGetHeader:(e,t)=>{if(!e||!e.state)return qt;const a=e.state;return 0==(2&a.wrap)?qt:(a.head=t,t.done=!1,jt)},inflateSetDictionary:(e,t)=>{const a=t.length;let i,r,s;return e&&e.state?(i=e.state,0!==i.wrap&&11!==i.mode?qt:11===i.mode&&(r=1,r=pe(r,t,a,0),r!==i.check)?Jt:(s=_a(e,t,a,a),s?(i.mode=31,Qt):(i.havedict=1,jt))):qt},inflateInfo:"pako inflate (from Nodeca project)"};var ga=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const pa=Object.prototype.toString,{Z_NO_FLUSH:wa,Z_FINISH:va,Z_OK:ba,Z_STREAM_END:ya,Z_NEED_DICT:Aa,Z_STREAM_ERROR:Ia,Z_DATA_ERROR:ka,Z_MEM_ERROR:Ba}=ye;function xa(e){this.options=pt({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new kt,this.strm.avail_out=0;let a=fa.inflateInit2(this.strm,t.windowBits);if(a!==ba)throw new Error(be[a]);if(this.header=new ga,fa.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=yt(t.dictionary):"[object ArrayBuffer]"===pa.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(a=fa.inflateSetDictionary(this.strm,t.dictionary),a!==ba)))throw new Error(be[a])}function Da(e,t){const a=new xa(t);if(a.push(e),a.err)throw a.msg||be[a.err];return a.result}xa.prototype.push=function(e,t){const a=this.strm,i=this.options.chunkSize,r=this.options.dictionary;let s,n,o;if(this.ended)return!1;for(n=t===~~t?t:!0===t?va:wa,"[object ArrayBuffer]"===pa.call(e)?a.input=new Uint8Array(e):a.input=e,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=fa.inflate(a,n),s===Aa&&r&&(s=fa.inflateSetDictionary(a,r),s===ba?s=fa.inflate(a,n):s===ka&&(s=Aa));a.avail_in>0&&s===ya&&a.state.wrap>0&&0!==e[a.next_in];)fa.inflateReset(a),s=fa.inflate(a,n);switch(s){case Ia:case ka:case Aa:case Ba:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===ya))if("string"===this.options.to){let e=It(a.output,a.next_out),t=a.next_out-e,r=At(a.output,e);a.next_out=t,a.avail_out=i-t,t&&a.output.set(a.output.subarray(e,e+t),0),this.onData(r)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==ba||0!==o){if(s===ya)return s=fa.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},xa.prototype.onData=function(e){this.chunks.push(e)},xa.prototype.onEnd=function(e){e===ba&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=wt(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Ta={Inflate:xa,inflate:Da,inflateRaw:function(e,t){return(t=t||{}).raw=!0,Da(e,t)},ungzip:Da,constants:ye};const{Deflate:Ea,deflate:Sa,deflateRaw:Ga,gzip:za}=Ot,{Inflate:Ca,inflate:Ma,inflateRaw:Ra,ungzip:La}=Ta;var Oa={Deflate:Ea,deflate:Sa,deflateRaw:Ga,gzip:za,Inflate:Ca,inflate:Ma,inflateRaw:Ra,ungzip:La,constants:ye};const Fa=2*Math.PI;function Na({values:e,columns:t}){let a={};return t.forEach(((t,i)=>{a[t]={};const r=function(e,t=(e=>e)){const a=e.length;let i=0;for(const a of e)i+=t(a);i/=a;let r=0;for(const a of e)r+=t(a)-i;return r/a}(e,(e=>e[i]));a[t].std=r;const[s,n]=function(e,t=(e=>e)){let a=1/0,i=-1/0;for(const r of e)a=Math.min(t(r),a),i=Math.max(t(r),i);return[a,i]}(e,(e=>e[i]));a[t].min=s,a[t].max=n})),a}const Ua={credential:"include",cache:"force-cache",mode:"cors"};async function Za(e){const t=await async function(){let e;try{process&&void 0!==typeof process&&"node"===process.release.name&&(e=(await import("cross-fetch")).fetch)}catch{e=window.fetch}return e}(),a=await t(e,Ua);let i=await a.arrayBuffer();return i=Oa.inflate(i),i}function Ha({N:e=400,freq_x:t=1,freq_y:a=1,amplitude:i=2,noise:r=0,seed:s=4711}={}){const n=new z(s),o=Math.ceil(Math.sqrt(e));let l=[];const h=[],m=["axis_1","axis_2","axis_3"];for(let r=0;r<e;++r){let s=r%o/o-.5,n=Math.floor(r/o)/o-.5,m=Math.sin(n*t)*Math.cos(s*a)*i;l.push([n,s,m]),h.push(Math.floor(r/e*8))}return r>0&&(l=l.map((e=>e.map((e=>e+n.random*r))))),{values:l,labels:h,columns:m,statistics:Na({values:l,columns:m})}}const Pa=Ha();function Wa({N:e=400,alpha_start:t=1,alpha_end:a=2.5,noise:i=0,width:r=20,seed:s=4711,num_labels:n=8}={}){const o=new z(s);let l=new Array(e);const h=new Array(e),m=["X","Y","Z"];for(let i=0;i<e;++i){const s=(t+i/e*(a-t))*Fa,m=s*Math.cos(s),d=s*Math.sin(s),c=r*o.random-r/2;l[i]=[m,d,c],h[i]=Math.floor(i/Math.floor(e/n))}return i>0&&(l=l.map((e=>e.map((e=>e+o.random*i))))),{values:l,labels:h,columns:m,statistics:Na({values:l,columns:m})}}const Ka=Wa();function Ya({N:e=400,noise:t=0,width:a=20,seed:i=4711,num_labels:r=8}={}){const s=new z(i);let n=new Array(e);const o=new Array(e),l=["X","Y","Z"];for(let t=0;t<e;++t){const i=3*Math.PI*(t/e-.5),l=-Math.sin(i),h=Math.sign(i)*(Math.cos(i)-1),m=a*s.random-a/2;n[t]=[l,h,m],o[t]=Math.floor(t/(e/r))}return t>0&&(n=n.map((e=>e.map((e=>e+s.random*t))))),{values:n,labels:o,columns:l,statistics:Na({values:n,columns:l})}}const Va=Ya();function ja({N:e=400,D:t=7,noise:a=0,touching:i=!0,length:r=12,seed:s=4711}={}){const n=new z(s),o=Math.round(e/t)*t;let l=[];const h=[],m=Array.from({length:t},((e,t)=>`axis_${t+1}`));for(let a=0;a<o;++a){let s=Array.from({length:t},((i,s)=>a%t!=s?0:a/e*r-r/2));i||(s=s.map(((e,i)=>e+(i-a%t)))),l.push(s),h.push("ray_"+(a%t+1))}return a>0&&(l=l.map((e=>e.map((e=>e+n.random*a))))),{values:l,labels:h,columns:m,statistics:Na({values:l,columns:m})}}const $a=ja();function Xa({N:e=400,noise:t=0,open:a=.5,seed:i=4711}={}){const r=new z(i),s=Math.floor(e/2),n=e-s,o=function([e,t],[a,i]){const r=t-e,s=i-a;return t=>(t-e)/r*s+a}([0,1],[a/2,1-a/2]);let l=new Array(e);const h=new Array(e),m=["moon_X","moon_Y","moon_Z"];for(let e=0;e<s;++e){const t=Fa*o(e/s)-Fa/4,a=Math.sin(t)-.5,i=Math.cos(t),r=0;l[e]=[a,i,r],h[e]="α"}for(let e=0;e<n;++e){const t=Fa*o(e/n)-Fa/4,a=1-Math.sin(t)-.5,i=0,r=1-Math.cos(t)-1;l[e+s]=[a,i,r],h[e+s]="β"}return t>0&&(l=l.map((e=>e.map((e=>e+r.random*t))))),{values:l,labels:h,columns:m,statistics:Na({values:l,columns:m})}}const qa=Xa();function Ja({N:e=400,D:t=3,centers:a,deviations:i,seed:r=4711}={}){const s=new z(r),n=[],o=[],l=Array.from({length:t},((e,t)=>`axis_${t}`));if(null==a&&(a=3),Number.isInteger(a)&&(a=Array.from({length:a},(()=>Array.from({length:t},(()=>12*s.random-6))))),!Array.isArray(a))throw"Centers needs to be an array, an integer, or null (defaults to centers = 3)!";if(i){if(Number.isFinite(i)&&(i=a.map((e=>e.map((()=>i))))),Array.isArray(i)&&i.length!=a.length)throw"If deviations is given, then its value needs to be a number or an array of the same length as centers! (defaults to deviations = 1)"}else i=a.map((e=>e.map((()=>1))));const h=Math.floor(e/a.length),m=e-h*a.length,d=Array.from({length:a.length},(()=>h));d[0]+=m;for(let e=0;e<a.length;++e){const r=d[e];let l=[];for(let r=0;r<t;++r)l.push(ei(s,a[e][r],i[e][r]));for(let t=0;t<r;++t)n.push(l.map((e=>e()))),o.push(`blob_${e+1}`)}return{values:n,labels:o,columns:l,statistics:Na({values:n,columns:l})}}const Qa=Ja();function ei(e,t=0,a=1){let i,r;return function(){let s;if(null!=i)s=i,i=null;else do{i=2*e.random-1,s=2*e.random-1,r=i*i+s*s}while(!r||r>1);return t+a*s*Math.sqrt(-2*Math.log(r)/r)}}var ti=[[39.1,18.7,181,3750],[39.5,17.4,186,3800],[40.3,18,195,3250],[null,null,null,null],[36.7,19.3,193,3450],[39.3,20.6,190,3650],[38.9,17.8,181,3625],[39.2,19.6,195,4675],[34.1,18.1,193,3475],[42,20.2,190,4250],[37.8,17.1,186,3300],[37.8,17.3,180,3700],[41.1,17.6,182,3200],[38.6,21.2,191,3800],[34.6,21.1,198,4400],[36.6,17.8,185,3700],[38.7,19,195,3450],[42.5,20.7,197,4500],[34.4,18.4,184,3325],[46,21.5,194,4200],[37.8,18.3,174,3400],[37.7,18.7,180,3600],[35.9,19.2,189,3800],[38.2,18.1,185,3950],[38.8,17.2,180,3800],[35.3,18.9,187,3800],[40.6,18.6,183,3550],[40.5,17.9,187,3200],[37.9,18.6,172,3150],[40.5,18.9,180,3950],[39.5,16.7,178,3250],[37.2,18.1,178,3900],[39.5,17.8,188,3300],[40.9,18.9,184,3900],[36.4,17,195,3325],[39.2,21.1,196,4150],[38.8,20,190,3950],[42.2,18.5,180,3550],[37.6,19.3,181,3300],[39.8,19.1,184,4650],[36.5,18,182,3150],[40.8,18.4,195,3900],[36,18.5,186,3100],[44.1,19.7,196,4400],[37,16.9,185,3e3],[39.6,18.8,190,4600],[41.1,19,182,3425],[37.5,18.9,179,2975],[36,17.9,190,3450],[42.3,21.2,191,4150],[39.6,17.7,186,3500],[40.1,18.9,188,4300],[35,17.9,190,3450],[42,19.5,200,4050],[34.5,18.1,187,2900],[41.4,18.6,191,3700],[39,17.5,186,3550],[40.6,18.8,193,3800],[36.5,16.6,181,2850],[37.6,19.1,194,3750],[35.7,16.9,185,3150],[41.3,21.1,195,4400],[37.6,17,185,3600],[41.1,18.2,192,4050],[36.4,17.1,184,2850],[41.6,18,192,3950],[35.5,16.2,195,3350],[41.1,19.1,188,4100],[35.9,16.6,190,3050],[41.8,19.4,198,4450],[33.5,19,190,3600],[39.7,18.4,190,3900],[39.6,17.2,196,3550],[45.8,18.9,197,4150],[35.5,17.5,190,3700],[42.8,18.5,195,4250],[40.9,16.8,191,3700],[37.2,19.4,184,3900],[36.2,16.1,187,3550],[42.1,19.1,195,4e3],[34.6,17.2,189,3200],[42.9,17.6,196,4700],[36.7,18.8,187,3800],[35.1,19.4,193,4200],[37.3,17.8,191,3350],[41.3,20.3,194,3550],[36.3,19.5,190,3800],[36.9,18.6,189,3500],[38.3,19.2,189,3950],[38.9,18.8,190,3600],[35.7,18,202,3550],[41.1,18.1,205,4300],[34,17.1,185,3400],[39.6,18.1,186,4450],[36.2,17.3,187,3300],[40.8,18.9,208,4300],[38.1,18.6,190,3700],[40.3,18.5,196,4350],[33.1,16.1,178,2900],[43.2,18.5,192,4100],[35,17.9,192,3725],[41,20,203,4725],[37.7,16,183,3075],[37.8,20,190,4250],[37.9,18.6,193,2925],[39.7,18.9,184,3550],[38.6,17.2,199,3750],[38.2,20,190,3900],[38.1,17,181,3175],[43.2,19,197,4775],[38.1,16.5,198,3825],[45.6,20.3,191,4600],[39.7,17.7,193,3200],[42.2,19.5,197,4275],[39.6,20.7,191,3900],[42.7,18.3,196,4075],[38.6,17,188,2900],[37.3,20.5,199,3775],[35.7,17,189,3350],[41.1,18.6,189,3325],[36.2,17.2,187,3150],[37.7,19.8,198,3500],[40.2,17,176,3450],[41.4,18.5,202,3875],[35.2,15.9,186,3050],[40.6,19,199,4e3],[38.8,17.6,191,3275],[41.5,18.3,195,4300],[39,17.1,191,3050],[44.1,18,210,4e3],[38.5,17.9,190,3325],[43.1,19.2,197,3500],[36.8,18.5,193,3500],[37.5,18.5,199,4475],[38.1,17.6,187,3425],[41.1,17.5,190,3900],[35.6,17.5,191,3175],[40.2,20.1,200,3975],[37,16.5,185,3400],[39.7,17.9,193,4250],[40.2,17.1,193,3400],[40.6,17.2,187,3475],[32.1,15.5,188,3050],[40.7,17,190,3725],[37.3,16.8,192,3e3],[39,18.7,185,3650],[39.2,18.6,190,4250],[36.6,18.4,184,3475],[36,17.8,195,3450],[37.8,18.1,193,3750],[36,17.1,187,3700],[41.5,18.5,201,4e3],[46.1,13.2,211,4500],[50,16.3,230,5700],[48.7,14.1,210,4450],[50,15.2,218,5700],[47.6,14.5,215,5400],[46.5,13.5,210,4550],[45.4,14.6,211,4800],[46.7,15.3,219,5200],[43.3,13.4,209,4400],[46.8,15.4,215,5150],[40.9,13.7,214,4650],[49,16.1,216,5550],[45.5,13.7,214,4650],[48.4,14.6,213,5850],[45.8,14.6,210,4200],[49.3,15.7,217,5850],[42,13.5,210,4150],[49.2,15.2,221,6300],[46.2,14.5,209,4800],[48.7,15.1,222,5350],[50.2,14.3,218,5700],[45.1,14.5,215,5e3],[46.5,14.5,213,4400],[46.3,15.8,215,5050],[42.9,13.1,215,5e3],[46.1,15.1,215,5100],[44.5,14.3,216,4100],[47.8,15,215,5650],[48.2,14.3,210,4600],[50,15.3,220,5550],[47.3,15.3,222,5250],[42.8,14.2,209,4700],[45.1,14.5,207,5050],[59.6,17,230,6050],[49.1,14.8,220,5150],[48.4,16.3,220,5400],[42.6,13.7,213,4950],[44.4,17.3,219,5250],[44,13.6,208,4350],[48.7,15.7,208,5350],[42.7,13.7,208,3950],[49.6,16,225,5700],[45.3,13.7,210,4300],[49.6,15,216,4750],[50.5,15.9,222,5550],[43.6,13.9,217,4900],[45.5,13.9,210,4200],[50.5,15.9,225,5400],[44.9,13.3,213,5100],[45.2,15.8,215,5300],[46.6,14.2,210,4850],[48.5,14.1,220,5300],[45.1,14.4,210,4400],[50.1,15,225,5e3],[46.5,14.4,217,4900],[45,15.4,220,5050],[43.8,13.9,208,4300],[45.5,15,220,5e3],[43.2,14.5,208,4450],[50.4,15.3,224,5550],[45.3,13.8,208,4200],[46.2,14.9,221,5300],[45.7,13.9,214,4400],[54.3,15.7,231,5650],[45.8,14.2,219,4700],[49.8,16.8,230,5700],[46.2,14.4,214,4650],[49.5,16.2,229,5800],[43.5,14.2,220,4700],[50.7,15,223,5550],[47.7,15,216,4750],[46.4,15.6,221,5e3],[48.2,15.6,221,5100],[46.5,14.8,217,5200],[46.4,15,216,4700],[48.6,16,230,5800],[47.5,14.2,209,4600],[51.1,16.3,220,6e3],[45.2,13.8,215,4750],[45.2,16.4,223,5950],[49.1,14.5,212,4625],[52.5,15.6,221,5450],[47.4,14.6,212,4725],[50,15.9,224,5350],[44.9,13.8,212,4750],[50.8,17.3,228,5600],[43.4,14.4,218,4600],[51.3,14.2,218,5300],[47.5,14,212,4875],[52.1,17,230,5550],[47.5,15,218,4950],[52.2,17.1,228,5400],[45.5,14.5,212,4750],[49.5,16.1,224,5650],[44.5,14.7,214,4850],[50.8,15.7,226,5200],[49.4,15.8,216,4925],[46.9,14.6,222,4875],[48.4,14.4,203,4625],[51.1,16.5,225,5250],[48.5,15,219,4850],[55.9,17,228,5600],[47.2,15.5,215,4975],[49.1,15,228,5500],[47.3,13.8,216,4725],[46.8,16.1,215,5500],[41.7,14.7,210,4700],[53.4,15.8,219,5500],[43.3,14,208,4575],[48.1,15.1,209,5500],[50.5,15.2,216,5e3],[49.8,15.9,229,5950],[43.5,15.2,213,4650],[51.5,16.3,230,5500],[46.2,14.1,217,4375],[55.1,16,230,5850],[44.5,15.7,217,4875],[48.8,16.2,222,6e3],[47.2,13.7,214,4925],[null,null,null,null],[46.8,14.3,215,4850],[50.4,15.7,222,5750],[45.2,14.8,212,5200],[49.9,16.1,213,5400],[46.5,17.9,192,3500],[50,19.5,196,3900],[51.3,19.2,193,3650],[45.4,18.7,188,3525],[52.7,19.8,197,3725],[45.2,17.8,198,3950],[46.1,18.2,178,3250],[51.3,18.2,197,3750],[46,18.9,195,4150],[51.3,19.9,198,3700],[46.6,17.8,193,3800],[51.7,20.3,194,3775],[47,17.3,185,3700],[52,18.1,201,4050],[45.9,17.1,190,3575],[50.5,19.6,201,4050],[50.3,20,197,3300],[58,17.8,181,3700],[46.4,18.6,190,3450],[49.2,18.2,195,4400],[42.4,17.3,181,3600],[48.5,17.5,191,3400],[43.2,16.6,187,2900],[50.6,19.4,193,3800],[46.7,17.9,195,3300],[52,19,197,4150],[50.5,18.4,200,3400],[49.5,19,200,3800],[46.4,17.8,191,3700],[52.8,20,205,4550],[40.9,16.6,187,3200],[54.2,20.8,201,4300],[42.5,16.7,187,3350],[51,18.8,203,4100],[49.7,18.6,195,3600],[47.5,16.8,199,3900],[47.6,18.3,195,3850],[52,20.7,210,4800],[46.9,16.6,192,2700],[53.5,19.9,205,4500],[49,19.5,210,3950],[46.2,17.5,187,3650],[50.9,19.1,196,3550],[45.5,17,196,3500],[50.9,17.9,196,3675],[50.8,18.5,201,4450],[50.1,17.9,190,3400],[49,19.6,212,4300],[51.5,18.7,187,3250],[49.8,17.3,198,3675],[48.1,16.4,199,3325],[51.4,19,201,3950],[45.7,17.3,193,3600],[50.7,19.7,203,4050],[42.5,17.3,187,3350],[52.2,18.8,197,3450],[45.2,16.6,191,3250],[49.3,19.9,203,4050],[50.2,18.8,202,3800],[45.6,19.4,194,3525],[51.9,19.5,206,3950],[46.8,16.5,189,3650],[45.7,17,195,3650],[55.8,19.8,207,4e3],[43.5,18.1,202,3400],[49.6,18.2,193,3775],[50.8,19,210,4100],[50.2,18.7,198,3775]],ai=["bill_length_mm","bill_depth_mm","flipper_length_mm","body_mass_g"],ii=["Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Adelie","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Gentoo","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap","Chinstrap"],ri=["Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Torgersen","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Biscoe","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream","Dream"],si=["male","female","female",null,"female","male","female","male",null,null,null,null,"female","male","male","female","female","male","female","male","female","male","female","male","male","female","male","female","female","male","female","male","female","male","female","male","male","female","female","male","female","male","female","male","female","male","male",null,"female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","male","female","male","female","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","male","female","female","male","female","male","female","male","female","male","male","female","female","male","female","male","female","male","female","male","female","male","female","male","female","male","male","female","female","male","female","male",null,"male","female","male","male","female","female","male","female","male","female","male","female","male","female","male","female","male","male","female","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male",null,"male","female","male","female","male","male","female","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","male","female","female","male","female","male","female","male",null,"male","female","male","female","male","female","male","female","male","female","male",null,"male","female",null,"female","male","female","male","female","male","male","female","male","female","female","male","female","male","female","male","female","male","female","male","male","female","female","male","female","male","female","male","female","male","female","male","female","male","female","male","female","male","male","female","female","male","female","male","male","female","male","female","female","male","female","male","male","female","female","male","female","male","female","male","female","male","male","female","male","female","female","male","female","male","male","female"],nioi={bill_length_mm:{count:342,mean:43.9219298246,std:5.4595837139,min:32.1,"25%":39.225,"50%":44.45,"75%":48.5,max:59.6},bill_depth_mm:{count:342,mean:17.1511695906,std:1.9747931568,min:13.1,"25%":15.6,"50%":17.3,"75%":18.7,max:21.5},flipper_length_mm:{count:342,mean:200.9152046784,std:14.0617136794,min:172,"25%":190,"50%":197,"75%":213,max:231},body_mass_g:{count:342,mean:4201.7543859649,std:801.9545356981,min:2700,"25%":3550,"50%":4050,"75%":4750,max:6300}},li={values:ti,columns:ai,labels:ii,island:ri,sex:si,year:ni,statistics:oi},hi=Object.freeze({__proto__:null,values:ti,columns:ai,labels:ii,island:ri,sex:si,year:ni,statistics:oi,default:li});function mi({removeMissingValues:e="all"}={}){let{values:t,columns:a,labels:i,sex:r,year:s,island:n,statistics:o}=hi;if("all"==e||"values"==e){const a=t.length;let o=[],l=!0;for(let h=0;h<a;++h){if(l=!0,"all"==e&&(s[h]&&r[h]&&i[h]&&n[h]||(l=l&&!1)),"all"==e||"values"==e)for(const e of t[h])l=l&&!Number.isNaN(e);1==l&&o.push(h)}t=di(t,o),i=di(i,o),r=di(r,o),s=di(s,o),n=di(n,o)}return{values:t,columns:a,labels:i,sex:r,year:s,island:n,statistics:o}}function di(e,t){return t.map((t=>e[t]))}const ci=mi();const ui={0:"T-shirt/top",1:"Trouser",2:"Pullover",3:"Dress",4:"Coat",5:"Sandal",6:"Shirt",7:"Sneaker",8:"Bag",9:"Ankle boot"};e.BLOBS=Qa,e.IRIS=o,e.MAMMOTH=T,e.MOONS=qa,e.OECD=_,e.PENGUINS=ci,e.RAYS=$a,e.SPOTIFY=y,e.SSHAPE=Va,e.SWISSROLL=Ka,e.WAVES=Pa,e.blobs=Ja,e.fetch_fmnist=async function({N:e=400,seed:t=4711,items:a=[0,1,2,3,4,5,6,7,8,9],big:i=!1}={}){const r=new z(t),s=await Za(i?"https://github.com/zalandoresearch/fashion-mnist/blob/3a25339d53c5d2a6a713c6467f17b37332aae507/data/fashion/train-images-idx3-ubyte.gz?raw=true":"https://github.com/zalandoresearch/fashion-mnist/blob/3a25339d53c5d2a6a713c6467f17b37332aae507/data/fashion/t10k-images-idx3-ubyte.gz?raw=true"),n=await Za(i?"https://github.com/zalandoresearch/fashion-mnist/blob/3a25339d53c5d2a6a713c6467f17b37332aae507/data/fashion/train-labels-idx1-ubyte.gz?raw=true":"https://github.com/zalandoresearch/fashion-mnist/blob/3a25339d53c5d2a6a713c6467f17b37332aae507/data/fashion/t10k-labels-idx1-ubyte.gz?raw=true");let o=[];for(let e=0;e<(i?6e4:1e4);++e)o[e]=n[8+e];const l=Math.floor(e/a.length),h=Array.from({length:a.length},(()=>l));h[0]+=e-l*a.length;const m=Array.from({length:i?6e4:1e4},((e,t)=>t)),d=a.map((e=>m.filter((t=>o[t]==e)))),c=h.map(((e,t)=>r.choice(d[t],e))).flat(),u=[],_=[];for(const e of c){const t=new Array(784);for(let a=0;a<784;++a)t[a]=s[16+784*e+a]/255;u.push(t),_.push(ui[n[8+e]])}const f=Array.from({length:784},((e,t)=>`pixel_at_${t%28}_${Math.floor(t/28)}`));return{values:u,labels:_,columns:f,statistics:Na({values:u,columns:f})}},e.fetch_mnist=async function({N:e=400,seed:t=4711,digits:a=[0,1,2,3,4,5,6,7,8,9],big:i=!1}={}){const r=new z(t),s=await Za(i?"https://storage.googleapis.com/cvdf-datasets/mnist/train-images-idx3-ubyte.gz":"https://storage.googleapis.com/cvdf-datasets/mnist/t10k-images-idx3-ubyte.gz"),n=await Za(i?"https://storage.googleapis.com/cvdf-datasets/mnist/train-labels-idx1-ubyte.gz":"https://storage.googleapis.com/cvdf-datasets/mnist/t10k-labels-idx1-ubyte.gz");let o=[];for(let e=0;e<(i?6e4:1e4);++e)o[e]=n[8+e];const l=Math.floor(e/a.length),h=Array.from({length:a.length},(()=>l));h[0]+=e-l*a.length;const m=Array.from({length:i?6e4:1e4},((e,t)=>t)),d=a.map((e=>m.filter((t=>o[t]==e)))),c=h.map(((e,t)=>r.choice(d[t],e))).flat(),u=[],_=[];for(const e of c){const t=new Array(784);for(let a=0;a<784;++a)t[a]=s[16+784*e+a]/255;u.push(t),_.push(n[8+e])}const f=Array.from({length:784},((e,t)=>`pixel_at_${t%28}_${Math.floor(t/28)}`));return{values:u,labels:_,columns:f,statistics:Na({values:u,columns:f})}},e.moons=Xa,e.penguins=mi,e.rays=ja,e.sshape=Ya,e.swissroll=Wa,e.waves=Ha,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=dataset.min.js.map
